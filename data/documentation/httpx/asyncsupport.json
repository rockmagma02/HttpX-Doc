{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Why-need-asynchronous","level":2,"type":"heading","text":"Why need asynchronous"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you send a request to a server, the server will take some time to process the request and return the response. If you use synchronous code to send the request, the code will block the main thread until the server returns the response. This will make the app unresponsive and slow."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, in a synchronous code, Your app will freeze to wait for the response from the server."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To solve this issues, asynchronous is useful. You can use async\/await to write asynchronous code in a synchronous way. This will make the app responsive and fast."}]},{"anchor":"Async-Top-Level-Function-API","level":2,"type":"heading","text":"Async Top-Level Function API"},{"type":"paragraph","inlineContent":[{"type":"text","text":"HttpX provides async top-level function API to make it easier to send requests asynchronously."}]},{"type":"codeListing","syntax":"swift","code":["let response = try await get(url: .string(\"https:\/\/www.example.com\")",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The async top-level function API is the same as the top-level function API, You can use all features documented in the "},{"type":"reference","isActive":true,"identifier":"GettingStarted"},{"type":"text","text":" page."}]},{"anchor":"Async-Client","level":2,"type":"heading","text":"Async Client"},{"type":"paragraph","inlineContent":[{"type":"text","text":"HttpX provides an async client to make it easier to send requests asynchronously."}]},{"type":"codeListing","syntax":"swift","code":["let client = AsyncClient()","let response = try await client.request(","    method: .get,","    url: .string(\"https:\/\/www.example.com\")",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The async client is the same as the client, You can use all features documented in the "},{"type":"reference","isActive":true,"identifier":"Client"},{"type":"text","text":" page."}]},{"anchor":"Async-Stream","level":2,"type":"heading","text":"Async Stream"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Async mode also supports streaming responses. You can use the "},{"type":"codeVoice","code":"AsyncStream"},{"type":"text","text":" property of the response to get the response data asynchronously."}]},{"type":"codeListing","syntax":"swift","code":["let response = try await get(url: .string(\"https:\/\/www.example.com\"))","let stream = response.asyncStream","for try await chunk in stream {","    print(chunk)","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/httpx\/asyncsupport"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/HttpX\/documentation\/HttpX\/AsyncSupport","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"HttpX provides support for async\/await, which allows you to write asynchronous code in swift ways."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Async Support","role":"article","modules":[{"name":"HttpX"}]},"hierarchy":{"paths":[["doc:\/\/HttpX\/documentation\/HttpX"]]},"seeAlsoSections":[{"title":"Advanced Usage","identifiers":["doc:\/\/HttpX\/documentation\/HttpX\/UsefulTypes","doc:\/\/HttpX\/documentation\/HttpX\/Client","doc:\/\/HttpX\/documentation\/HttpX\/RequestContent","doc:\/\/HttpX\/documentation\/HttpX\/Authentication","doc:\/\/HttpX\/documentation\/HttpX\/Timeout","doc:\/\/HttpX\/documentation\/HttpX\/EventHooks"],"generated":true}],"references":{"Client":{"title":"Client","titleInlineContent":[{"type":"text","text":"Client"}],"type":"link","identifier":"Client","url":"Client"},"doc://HttpX/documentation/HttpX":{"role":"collection","title":"HttpX","abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"HttpX"}]},{"type":"text","text":" is a Swift package that provides easy-to-use HTTP client APIs,"},{"type":"text","text":" "},{"type":"text","text":"closely modeled after the API of the Python package "},{"type":"strong","inlineContent":[{"type":"text","text":"httpx"}]},{"type":"text","text":"."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX","kind":"symbol","type":"topic","url":"\/documentation\/httpx"},"doc://HttpX/documentation/HttpX/Timeout":{"role":"article","title":"Timeout","abstract":[{"type":"text","text":"HttpX supports setting a timeout for requests. This can be done by pass the "},{"type":"codeVoice","code":"timeout"},{"type":"text","text":" argument to the request method."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/Timeout","kind":"article","type":"topic","url":"\/documentation\/httpx\/timeout"},"doc://HttpX/documentation/HttpX/Client":{"role":"article","title":"Client","abstract":[{"type":"text","text":"If you do anything more than experimentation, one-off scripts, or prototypes, then you should use a Client instance."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/Client","kind":"article","type":"topic","url":"\/documentation\/httpx\/client"},"doc://HttpX/documentation/HttpX/Authentication":{"role":"article","title":"Authentication","abstract":[{"type":"text","text":"HttpX provides a flexible way to authenticate requests. You can use the "},{"type":"codeVoice","code":"AuthType"},{"type":"text","text":" enum to specify the authentication method you want to use."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/Authentication","kind":"article","type":"topic","url":"\/documentation\/httpx\/authentication"},"doc://HttpX/documentation/HttpX/EventHooks":{"role":"article","title":"Event Hooks","abstract":[{"type":"text","text":"HTTPX provides the hooks that allow you to hook into the request\/response lifecycle. These hooks are useful for logging, debugging, and other purposes."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/EventHooks","kind":"article","type":"topic","url":"\/documentation\/httpx\/eventhooks"},"GettingStarted":{"title":"Getting Started","titleInlineContent":[{"type":"text","text":"Getting Started"}],"type":"link","identifier":"GettingStarted","url":"GettingStarted"},"doc://HttpX/documentation/HttpX/UsefulTypes":{"role":"article","title":"Useful Types","abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"HttpX"}]},{"type":"text","text":" offers various types that facilitate working with HTTP requests and responses. These types allow users to specify arguments in different ways, such as passing the "},{"type":"codeVoice","code":"url"},{"type":"text","text":" as either a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" or a "},{"type":"codeVoice","code":"URL"},{"type":"text","text":"."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/UsefulTypes","kind":"article","type":"topic","url":"\/documentation\/httpx\/usefultypes"},"doc://HttpX/documentation/HttpX/RequestContent":{"role":"article","title":"Request Content","abstract":[{"type":"text","text":"HttpX provides some common Request Content types to make it easier to send requests with different types of content, Or User also can encode the content by themselves."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/RequestContent","kind":"article","type":"topic","url":"\/documentation\/httpx\/requestcontent"}}}