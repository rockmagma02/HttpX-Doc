{"interfaceLanguages":{"swift":[{"children":[{"title":"Getting Started","type":"groupMarker"},{"path":"\/documentation\/httpx\/gettingstarted","title":"GettingStarted","type":"article"},{"title":"Advanced Usage","type":"groupMarker"},{"path":"\/documentation\/httpx\/usefultypes","title":"Useful Types","type":"article"},{"path":"\/documentation\/httpx\/client","title":"Client","type":"article"},{"path":"\/documentation\/httpx\/requestcontent","title":"Request Content","type":"article"},{"path":"\/documentation\/httpx\/authentication","title":"Authentication","type":"article"},{"path":"\/documentation\/httpx\/asyncsupport","title":"Async Support","type":"article"},{"path":"\/documentation\/httpx\/timeout","title":"Timeout","type":"article"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/httpx\/eventhooks\/init(request:response:)","title":"init(request: [(inout URLRequest) -> Void], response: [(inout Response) -> Void])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/eventhooks\/request","title":"var request: [(inout URLRequest) -> Void]","type":"property"},{"path":"\/documentation\/httpx\/eventhooks\/response","title":"var response: [(inout Response) -> Void]","type":"property"}],"path":"\/documentation\/httpx\/eventhooks","title":"Event Hooks","type":"article"},{"title":"API Reference","type":"groupMarker"},{"path":"\/documentation\/httpx\/toplevelapi","title":"Top Level API","type":"symbol"},{"children":[{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/httpx\/baseclient\/init(auth:params:headers:cookies:cookieidentifier:timeout:followredirects:maxredirects:eventhooks:baseurl:defaultencoding:)","title":"init(auth: AuthType?, params: QueryParamsType?, headers: HeadersType?, cookies: CookiesType?, cookieIdentifier: String?, timeout: TimeInterval, followRedirects: Bool, maxRedirects: Int, eventHooks: EventHooks, baseURL: URLType?, defaultEncoding: String.Encoding)","type":"init"},{"title":"Refer Configuration","type":"groupMarker"},{"path":"\/documentation\/httpx\/baseclient\/auth","title":"var auth: any BaseAuth","type":"property"},{"path":"\/documentation\/httpx\/baseclient\/baseurl","title":"var baseURL: URL?","type":"property"},{"path":"\/documentation\/httpx\/baseclient\/cookies","title":"var cookies: [HTTPCookie]","type":"property"},{"path":"\/documentation\/httpx\/baseclient\/defaultencoding","title":"var defaultEncoding: String.Encoding","type":"property"},{"path":"\/documentation\/httpx\/baseclient\/eventhooks","title":"var eventHooks: EventHooks","type":"property"},{"path":"\/documentation\/httpx\/baseclient\/followredirects","title":"var followRedirects: Bool","type":"property"},{"path":"\/documentation\/httpx\/baseclient\/headers","title":"var headers: [(String, String)]","type":"property"},{"path":"\/documentation\/httpx\/baseclient\/maxredirects","title":"var maxRedirects: Int","type":"property"},{"path":"\/documentation\/httpx\/baseclient\/timeout","title":"var timeout: TimeInterval","type":"property"},{"path":"\/documentation\/httpx\/baseclient\/params","title":"var params: [URLQueryItem]","type":"property"},{"title":"Set Configuration","type":"groupMarker"},{"path":"\/documentation\/httpx\/baseclient\/setauth(_:)","title":"func setAuth(AuthType)","type":"method"},{"path":"\/documentation\/httpx\/baseclient\/setbaseurl(_:)","title":"func setBaseURL(URLType)","type":"method"},{"path":"\/documentation\/httpx\/baseclient\/setcookies(_:)","title":"func setCookies(CookiesType)","type":"method"},{"path":"\/documentation\/httpx\/baseclient\/setdefaultencoding(_:)","title":"func setDefaultEncoding(String.Encoding)","type":"method"},{"path":"\/documentation\/httpx\/baseclient\/seteventhooks(_:)","title":"func setEventHooks(EventHooks)","type":"method"},{"path":"\/documentation\/httpx\/baseclient\/setredirects(follow:max:)","title":"func setRedirects(follow: Bool, max: Int)","type":"method"},{"path":"\/documentation\/httpx\/baseclient\/setheaders(_:)","title":"func setHeaders(HeadersType)","type":"method"},{"path":"\/documentation\/httpx\/baseclient\/settimeout(_:)","title":"func setTimeout(TimeInterval)","type":"method"},{"path":"\/documentation\/httpx\/baseclient\/setparams(_:)","title":"func setParams(QueryParamsType)","type":"method"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/baseclient\/buildrequest(method:url:content:params:headers:timeout:)","title":"func buildRequest(method: HTTPMethod, url: URLType?, content: Content?, params: QueryParamsType?, headers: HeadersType?, timeout: TimeInterval?) throws -> URLRequest","type":"method"}],"path":"\/documentation\/httpx\/baseclient","title":"BaseClient","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/syncclient\/request(method:url:content:params:headers:timeout:auth:followredirects:chunksize:)","title":"func request(method: HTTPMethod, url: URLType, content: Content?, params: QueryParamsType?, headers: HeadersType?, timeout: TimeInterval?, auth: AuthType?, followRedirects: Bool?, chunkSize: Int?) throws -> Response","type":"method"},{"path":"\/documentation\/httpx\/syncclient\/sendrequest(request:auth:followredirects:chunksize:)","title":"func sendRequest(request: URLRequest, auth: AuthType?, followRedirects: Bool?, chunkSize: Int?) throws -> Response","type":"method"}],"path":"\/documentation\/httpx\/syncclient","title":"SyncClient","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/asyncclient\/request(method:url:content:params:headers:timeout:auth:followredirects:chunksize:)","title":"func request(method: HTTPMethod, url: URLType, content: Content?, params: QueryParamsType?, headers: HeadersType?, timeout: TimeInterval?, auth: AuthType?, followRedirects: Bool?, chunkSize: Int?) async throws -> Response","type":"method"},{"path":"\/documentation\/httpx\/asyncclient\/sendrequest(request:auth:followredirects:chunksize:)","title":"func sendRequest(request: URLRequest, auth: AuthType?, followRedirects: Bool?, chunkSize: Int?) async throws -> Response","type":"method"}],"path":"\/documentation\/httpx\/asyncclient","title":"AsyncClient","type":"class"}],"path":"\/documentation\/httpx\/clientapi","title":"Client API","type":"symbol"},{"children":[{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/baseauth\/needrequestbody","title":"var needRequestBody: Bool","type":"property"},{"path":"\/documentation\/httpx\/baseauth\/needresponsebody","title":"var needResponseBody: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/baseauth\/authflow(_:continuation:)-272mo","title":"func authFlow(URLRequest, continuation: BidirectionalSyncStream<URLRequest, Response, NoneType>.Continuation)","type":"method"},{"path":"\/documentation\/httpx\/baseauth\/authflow(_:continuation:)-5begl","title":"func authFlow(URLRequest, continuation: BidirectionalAsyncStream<URLRequest, Response, NoneType>.Continuation) async","type":"method"}],"path":"\/documentation\/httpx\/baseauth","title":"BaseAuth","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/httpx\/basicauth\/init(username:password:)","title":"init(username: String, password: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/basicauth\/needrequestbody","title":"var needRequestBody: Bool","type":"property"},{"path":"\/documentation\/httpx\/basicauth\/needresponsebody","title":"var needResponseBody: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/basicauth\/authflow(_:continuation:)-3vcvl","title":"func authFlow(URLRequest, continuation: BidirectionalSyncStream<URLRequest, Response, NoneType>.Continuation)","type":"method"},{"path":"\/documentation\/httpx\/basicauth\/authflow(_:continuation:)-8dkwf","title":"func authFlow(URLRequest, continuation: BidirectionalAsyncStream<URLRequest, Response, NoneType>.Continuation) async","type":"method"}],"path":"\/documentation\/httpx\/basicauth","title":"BasicAuth","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/httpx\/functionauth\/init(authfunction:)","title":"init(authFunction: (URLRequest) -> URLRequest)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/functionauth\/needrequestbody","title":"var needRequestBody: Bool","type":"property"},{"path":"\/documentation\/httpx\/functionauth\/needresponsebody","title":"var needResponseBody: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/functionauth\/authflow(_:continuation:)-3e9b1","title":"func authFlow(URLRequest, continuation: BidirectionalSyncStream<URLRequest, Response, NoneType>.Continuation)","type":"method"},{"path":"\/documentation\/httpx\/functionauth\/authflow(_:continuation:)-5a5h9","title":"func authFlow(URLRequest, continuation: BidirectionalAsyncStream<URLRequest, Response, NoneType>.Continuation) async","type":"method"}],"path":"\/documentation\/httpx\/functionauth","title":"FunctionAuth","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/httpx\/oauth\/init(token:)","title":"init(token: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/oauth\/needrequestbody","title":"var needRequestBody: Bool","type":"property"},{"path":"\/documentation\/httpx\/oauth\/needresponsebody","title":"var needResponseBody: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/oauth\/authflow(_:continuation:)-3act2","title":"func authFlow(URLRequest, continuation: BidirectionalSyncStream<URLRequest, Response, NoneType>.Continuation)","type":"method"},{"path":"\/documentation\/httpx\/oauth\/authflow(_:continuation:)-6biyo","title":"func authFlow(URLRequest, continuation: BidirectionalAsyncStream<URLRequest, Response, NoneType>.Continuation) async","type":"method"}],"path":"\/documentation\/httpx\/oauth","title":"OAuth","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/httpx\/apikeyauth\/init(key:)","title":"init(key: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/apikeyauth\/needrequestbody","title":"var needRequestBody: Bool","type":"property"},{"path":"\/documentation\/httpx\/apikeyauth\/needresponsebody","title":"var needResponseBody: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/apikeyauth\/authflow(_:continuation:)-4s5bq","title":"func authFlow(URLRequest, continuation: BidirectionalSyncStream<URLRequest, Response, NoneType>.Continuation)","type":"method"},{"path":"\/documentation\/httpx\/apikeyauth\/authflow(_:continuation:)-86zkt","title":"func authFlow(URLRequest, continuation: BidirectionalAsyncStream<URLRequest, Response, NoneType>.Continuation) async","type":"method"}],"path":"\/documentation\/httpx\/apikeyauth","title":"APIKeyAuth","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/httpx\/digestauth\/init(username:password:)","title":"init(username: String, password: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/digestauth\/needrequestbody","title":"var needRequestBody: Bool","type":"property"},{"path":"\/documentation\/httpx\/digestauth\/needresponsebody","title":"var needResponseBody: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/digestauth\/authflow(_:continuation:)-20jlu","title":"func authFlow(URLRequest, continuation: BidirectionalAsyncStream<URLRequest, Response, NoneType>.Continuation) async","type":"method"},{"path":"\/documentation\/httpx\/digestauth\/authflow(_:continuation:)-a3jr","title":"func authFlow(URLRequest, continuation: BidirectionalSyncStream<URLRequest, Response, NoneType>.Continuation)","type":"method"}],"path":"\/documentation\/httpx\/digestauth","title":"DigestAuth","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/httpx\/emptyauth\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/emptyauth\/needrequestbody","title":"var needRequestBody: Bool","type":"property"},{"path":"\/documentation\/httpx\/emptyauth\/needresponsebody","title":"var needResponseBody: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/emptyauth\/authflow(_:continuation:)-5kvky","title":"func authFlow(URLRequest, continuation: BidirectionalSyncStream<URLRequest, Response, NoneType>.Continuation)","type":"method"},{"path":"\/documentation\/httpx\/emptyauth\/authflow(_:continuation:)-x50r","title":"func authFlow(URLRequest, continuation: BidirectionalAsyncStream<URLRequest, Response, NoneType>.Continuation) async","type":"method"}],"path":"\/documentation\/httpx\/emptyauth","title":"EmptyAuth","type":"class"}],"path":"\/documentation\/httpx\/authapi","title":"Auth API","type":"symbol"},{"children":[{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/httpx\/content\/data(_:)","title":"case data(Data)","type":"case"},{"path":"\/documentation\/httpx\/content\/json(_:)","title":"case json(Any)","type":"case"},{"path":"\/documentation\/httpx\/content\/multipart(_:)","title":"case multipart(MultiPart)","type":"case"},{"path":"\/documentation\/httpx\/content\/text(_:)","title":"case text(String)","type":"case"},{"path":"\/documentation\/httpx\/content\/urlencoded(_:)","title":"case urlEncoded([(String, String)])","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/content\/encodecontent(request:encode:)","title":"func encodeContent(request: inout URLRequest, encode: String.Encoding) throws","type":"method"}],"path":"\/documentation\/httpx\/content","title":"Content","type":"enum"},{"children":[{"title":"Body and Headers","type":"groupMarker"},{"path":"\/documentation\/httpx\/multipart\/contentlength","title":"var contentLength: Int","type":"property"},{"path":"\/documentation\/httpx\/multipart\/body","title":"var body: Data","type":"property"},{"path":"\/documentation\/httpx\/multipart\/headers","title":"var headers: [String : String]","type":"property"},{"title":"File","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/multipart\/file\/contenttype","title":"var contentType: String?","type":"property"},{"path":"\/documentation\/httpx\/multipart\/file\/filename","title":"var filename: String?","type":"property"},{"path":"\/documentation\/httpx\/multipart\/file\/headers","title":"var headers: [String : String]","type":"property"},{"path":"\/documentation\/httpx\/multipart\/file\/path","title":"var path: URL","type":"property"}],"path":"\/documentation\/httpx\/multipart\/file","title":"MultiPart.File","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/httpx\/multipart\/init(fromdata:fromfile:encoding:boundary:)","title":"init(fromData: [(String, Any)], fromFile: [(String, MultiPart.File)], encoding: String.Encoding, boundary: Data?) throws","type":"init"}],"path":"\/documentation\/httpx\/multipart","title":"MultiPart","type":"class"}],"path":"\/documentation\/httpx\/contentapi","title":"Client API","type":"symbol"},{"children":[{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/httpx\/httpmethod\/connect","title":"case connect","type":"case"},{"path":"\/documentation\/httpx\/httpmethod\/delete","title":"case delete","type":"case"},{"path":"\/documentation\/httpx\/httpmethod\/get","title":"case get","type":"case"},{"path":"\/documentation\/httpx\/httpmethod\/head","title":"case head","type":"case"},{"path":"\/documentation\/httpx\/httpmethod\/options","title":"case options","type":"case"},{"path":"\/documentation\/httpx\/httpmethod\/patch","title":"case patch","type":"case"},{"path":"\/documentation\/httpx\/httpmethod\/post","title":"case post","type":"case"},{"path":"\/documentation\/httpx\/httpmethod\/put","title":"case put","type":"case"},{"path":"\/documentation\/httpx\/httpmethod\/trace","title":"case trace","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/httpx\/httpmethod\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/httpx\/httpmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/httpx\/httpmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/httpmethod\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/httpmethod\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/httpx\/httpmethod\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/httpx\/httpmethod","title":"HTTPMethod","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/httpx\/urltype\/class(_:)","title":"case `class`(URL)","type":"case"},{"path":"\/documentation\/httpx\/urltype\/components(_:)","title":"case components(URLComponents)","type":"case"},{"path":"\/documentation\/httpx\/urltype\/string(_:)","title":"case string(String)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/urltype\/buildurl()","title":"func buildURL() -> URL?","type":"method"}],"path":"\/documentation\/httpx\/urltype","title":"URLType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/httpx\/queryparamstype\/array(_:)","title":"case array([(String, String)])","type":"case"},{"path":"\/documentation\/httpx\/queryparamstype\/class(_:)","title":"case `class`([URLQueryItem])","type":"case"},{"path":"\/documentation\/httpx\/queryparamstype\/dictionary(_:)","title":"case dictionary([String : String])","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/queryparamstype\/buildqueryitems()","title":"func buildQueryItems() -> [URLQueryItem]","type":"method"}],"path":"\/documentation\/httpx\/queryparamstype","title":"QueryParamsType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/httpx\/headerstype\/array(_:)","title":"case array([(String, String)])","type":"case"},{"path":"\/documentation\/httpx\/headerstype\/dictionary(_:)","title":"case dictionary([String : String])","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/headerstype\/buildheaders()","title":"func buildHeaders() -> [(String, String)]","type":"method"}],"path":"\/documentation\/httpx\/headerstype","title":"HeadersType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/httpx\/cookiestype\/array(_:)","title":"case array([(String, String, String, String?)])","type":"case"},{"path":"\/documentation\/httpx\/cookiestype\/cookiearray(_:)","title":"case cookieArray([HTTPCookie])","type":"case"},{"path":"\/documentation\/httpx\/cookiestype\/storage(_:)","title":"case storage(HTTPCookieStorage)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/cookiestype\/buildcookies()","title":"func buildCookies() -> [HTTPCookie]","type":"method"}],"path":"\/documentation\/httpx\/cookiestype","title":"CookiesType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/httpx\/authtype\/basic(_:)","title":"case basic((String, String))","type":"case"},{"path":"\/documentation\/httpx\/authtype\/class(_:)","title":"case `class`(any BaseAuth)","type":"case"},{"path":"\/documentation\/httpx\/authtype\/func(_:)","title":"case `func`((URLRequest) -> URLRequest)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/authtype\/buildauth()","title":"func buildAuth() -> any BaseAuth","type":"method"}],"path":"\/documentation\/httpx\/authtype","title":"AuthType","type":"enum"}],"path":"\/documentation\/httpx\/typeapi","title":"Type API","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/foundation\/url\/isabsoluteurl","title":"var isAbsoluteURL: Bool","type":"property"},{"path":"\/documentation\/httpx\/foundation\/url\/isrelativeurl","title":"var isRelativeURL: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/foundation\/url\/mergequeryitems(_:)","title":"func mergeQueryItems([URLQueryItem]) throws","type":"method"},{"path":"\/documentation\/httpx\/foundation\/url\/networklocation(percentencoded:)","title":"func networkLocation(percentEncoded: Bool) -> String","type":"method"}],"path":"\/documentation\/httpx\/foundation\/url","title":"URL","type":"extension"},{"children":[{"children":[{"title":"Get Response Information","type":"groupMarker"},{"path":"\/documentation\/httpx\/response\/statuscode","title":"var statusCode: Int","type":"property"},{"path":"\/documentation\/httpx\/response\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/httpx\/response\/history","title":"var history: [Response]","type":"property"},{"path":"\/documentation\/httpx\/response\/nextrequest","title":"var nextRequest: URLRequest?","type":"property"},{"title":"Get Error","type":"groupMarker"},{"path":"\/documentation\/httpx\/response\/error","title":"var error: (any Error)?","type":"property"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/httpx\/response\/init(httpurlresponse:)","title":"init?(HTTPURLResponse: HTTPURLResponse)","type":"init"},{"path":"\/documentation\/httpx\/response\/init(url:error:)","title":"init(url: URL, error: any Error)","type":"init"},{"path":"\/documentation\/httpx\/response\/init(url:statuscode:headers:)","title":"init?(url: URL, statusCode: Int, headers: [String : String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/response\/allheaderfields","title":"var allHeaderFields: [String : String]","type":"property"},{"path":"\/documentation\/httpx\/response\/defaultencoding","title":"var defaultEncoding: String.Encoding","type":"property"},{"path":"\/documentation\/httpx\/response\/expectedcontentlength","title":"var expectedContentLength: Int64?","type":"property"},{"path":"\/documentation\/httpx\/response\/hasredirectlocation","title":"var hasRedirectLocation: Bool","type":"property"},{"path":"\/documentation\/httpx\/response\/isclienterror","title":"var isClientError: Bool","type":"property"},{"path":"\/documentation\/httpx\/response\/iserror","title":"var isError: Bool","type":"property"},{"path":"\/documentation\/httpx\/response\/isinformational","title":"var isInformational: Bool","type":"property"},{"path":"\/documentation\/httpx\/response\/isredirect","title":"var isRedirect: Bool","type":"property"},{"path":"\/documentation\/httpx\/response\/isservererror","title":"var isServerError: Bool","type":"property"},{"path":"\/documentation\/httpx\/response\/issuccess","title":"var isSuccess: Bool","type":"property"},{"path":"\/documentation\/httpx\/response\/mimetype","title":"var mimeType: String?","type":"property"},{"path":"\/documentation\/httpx\/response\/numberofbytesreceived","title":"var numberOfBytesReceived: Int","type":"property"},{"path":"\/documentation\/httpx\/response\/status","title":"var status: String","type":"property"},{"path":"\/documentation\/httpx\/response\/suggestedfilename","title":"var suggestedFilename: String?","type":"property"},{"path":"\/documentation\/httpx\/response\/textencodingname","title":"var textEncodingName: String?","type":"property"},{"path":"\/documentation\/httpx\/response\/url","title":"var url: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/response\/close()","title":"func close()","type":"method"},{"path":"\/documentation\/httpx\/response\/getdata()-7nkcl","title":"func getData() -> Data","type":"method"},{"path":"\/documentation\/httpx\/response\/getdata()-mwup","title":"func getData() async throws -> Data","type":"method"},{"path":"\/documentation\/httpx\/response\/getjson()-9u101","title":"func getJSON() -> Any?","type":"method"},{"path":"\/documentation\/httpx\/response\/getjson()-9ynfm","title":"func getJSON() async throws -> Any?","type":"method"},{"path":"\/documentation\/httpx\/response\/gettext()-3dfp","title":"func getText() async throws -> String","type":"method"},{"path":"\/documentation\/httpx\/response\/gettext()-5h2v9","title":"func getText() -> String","type":"method"},{"path":"\/documentation\/httpx\/response\/makeasynciterator()","title":"func makeAsyncIterator() -> Response","type":"method"},{"path":"\/documentation\/httpx\/response\/makeiterator()","title":"func makeIterator() -> Response","type":"method"},{"path":"\/documentation\/httpx\/response\/next()-69nvn","title":"func next() -> Data?","type":"method"},{"path":"\/documentation\/httpx\/response\/next()-7utab","title":"func next() async throws -> Data?","type":"method"},{"path":"\/documentation\/httpx\/response\/value(forhttpheaderfield:)","title":"func value(forHTTPHeaderField: String) -> String?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/response\/compactmap(_:)-5y2lj","title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/httpx\/response\/compactmap(_:)-eyrc","title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method"},{"path":"\/documentation\/httpx\/response\/drop(while:)-8ykl1","title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/httpx\/response\/drop(while:)-909n","title":"func drop(while: (Self.Element) async throws -> Bool) -> AsyncThrowingDropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/httpx\/response\/dropfirst(_:)-2jrrt","title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/httpx\/response\/filter(_:)-1tvbx","title":"func filter((Self.Element) async throws -> Bool) -> AsyncThrowingFilterSequence<Self>","type":"method"},{"path":"\/documentation\/httpx\/response\/filter(_:)-8e7fa","title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method"},{"path":"\/documentation\/httpx\/response\/flatmap(_:)-109iu","title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/httpx\/response\/flatmap(_:)-1uhly","title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method"},{"path":"\/documentation\/httpx\/response\/map(_:)-4b1ej","title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/httpx\/response\/map(_:)-wt01","title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method"},{"path":"\/documentation\/httpx\/response\/prefix(_:)-afrl","title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method"},{"path":"\/documentation\/httpx\/response\/prefix(while:)-21kfu","title":"func prefix(while: (Self.Element) async throws -> Bool) rethrows -> AsyncThrowingPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/httpx\/response\/prefix(while:)-61unz","title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method"},{"path":"\/documentation\/httpx\/response\/reduce(_:_:)-710dc","title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method"},{"path":"\/documentation\/httpx\/response\/reduce(into:_:)-5ovna","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method"}],"path":"\/documentation\/httpx\/response\/asyncsequence-implementations","title":"AsyncSequence Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/response\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/httpx\/response\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/httpx\/response\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/response\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/httpx\/response\/compactmap(_:)-9tn7l","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/httpx\/response\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/httpx\/response\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/httpx\/response\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/httpx\/response\/drop(while:)-86kml","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/httpx\/response\/dropfirst(_:)-82830","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/httpx\/response\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/httpx\/response\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/httpx\/response\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/httpx\/response\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/httpx\/response\/filter(_:)-11v14","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/httpx\/response\/filter(_:)-722r5","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/httpx\/response\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/httpx\/response\/flatmap(_:)-1k4x","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/httpx\/response\/flatmap(_:)-9l49l","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/httpx\/response\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/httpx\/response\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/httpx\/response\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/httpx\/response\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/httpx\/response\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/httpx\/response\/map(_:)-7ejyz","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/httpx\/response\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/httpx\/response\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/httpx\/response\/prefix(_:)-286tu","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/httpx\/response\/prefix(while:)-zbqx","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/httpx\/response\/reduce(_:_:)-5e463","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/httpx\/response\/reduce(into:_:)-ef1i","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/httpx\/response\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/httpx\/response\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/httpx\/response\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/httpx\/response\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/httpx\/response\/sorted(using:)-145xj","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/httpx\/response\/sorted(using:)-324e2","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/httpx\/response\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/httpx\/response\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/httpx\/response\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/httpx\/response\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/httpx\/response\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/httpx\/response\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/httpx\/response\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/httpx\/response","title":"Response","type":"class"}],"path":"\/documentation\/httpx\/responseapi","title":"Response API","type":"symbol"},{"children":[{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/httpx\/autherror\/==(_:_:)","title":"static func == (AuthError, AuthError) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/httpx\/autherror\/invaliddigestauth(message:)","title":"case invalidDigestAuth(message: String)","type":"case"},{"path":"\/documentation\/httpx\/autherror\/invalidrequest(message:)","title":"case invalidRequest(message: String)","type":"case"},{"path":"\/documentation\/httpx\/autherror\/qopnotsupported(message:)","title":"case qopNotSupported(message: String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/httpx\/autherror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/httpx\/autherror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/autherror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/httpx\/autherror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/httpx\/autherror","title":"AuthError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/httpx\/streamerror\/streamhasclosed","title":"case streamHasClosed","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/httpx\/streamerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/httpx\/streamerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/streamerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/httpx\/streamerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/httpx\/streamerror","title":"StreamError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/httpx\/contenterror\/pathnotfound","title":"case pathNotFound","type":"case"},{"path":"\/documentation\/httpx\/contenterror\/unsupportedtype","title":"case unsupportedType","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/httpx\/contenterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/httpx\/contenterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/contenterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/httpx\/contenterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/httpx\/contenterror","title":"ContentError","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/httpx\/httpxerror\/==(_:_:)","title":"static func == (HttpXError, HttpXError) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/httpx\/httpxerror\/invalidrequest(message:)","title":"case invalidRequest(message: String)","type":"case"},{"path":"\/documentation\/httpx\/httpxerror\/invalidresponse(message:)","title":"case invalidResponse(message: String)","type":"case"},{"path":"\/documentation\/httpx\/httpxerror\/invalidurl(message:)","title":"case invalidURL(message: String)","type":"case"},{"path":"\/documentation\/httpx\/httpxerror\/networkerror(message:code:)","title":"case networkError(message: String, code: Int)","type":"case"},{"path":"\/documentation\/httpx\/httpxerror\/redirecterror(message:)","title":"case redirectError(message: String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/httpx\/httpxerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/httpx\/httpxerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/httpxerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/httpx\/httpxerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/httpx\/httpxerror","title":"HttpXError","type":"enum"}],"path":"\/documentation\/httpx\/errorapi","title":"Error API","type":"symbol"},{"children":[{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/foundation\/inputstream\/readalldata(buffersize:)","title":"func readAllData(bufferSize: Int) -> Data","type":"method"}],"path":"\/documentation\/httpx\/foundation\/inputstream","title":"InputStream","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/httpxdelegate\/urlsession(_:didreceive:)","title":"func urlSession(URLSession, didReceive: URLAuthenticationChallenge) async -> (URLSession.AuthChallengeDisposition, URLCredential?)","type":"method"}],"path":"\/documentation\/httpx\/httpxdelegate","title":"HttpXDelegate","type":"class"}],"path":"\/documentation\/httpx\/streamapi","title":"Stream API","type":"symbol"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/httpxtaskdelegate\/urlsession(_:datatask:didreceive:)-4jz1d","title":"func urlSession(URLSession, dataTask: URLSessionDataTask, didReceive: URLResponse) async -> URLSession.ResponseDisposition","type":"method"},{"path":"\/documentation\/httpx\/httpxtaskdelegate\/urlsession(_:datatask:didreceive:)-5lo1z","title":"func urlSession(URLSession, dataTask: URLSessionDataTask, didReceive: Data)","type":"method"},{"path":"\/documentation\/httpx\/httpxtaskdelegate\/urlsession(_:task:didcompletewitherror:)","title":"func urlSession(URLSession, task: URLSessionTask, didCompleteWithError: (any Error)?)","type":"method"},{"path":"\/documentation\/httpx\/httpxtaskdelegate\/urlsession(_:task:didreceive:)","title":"func urlSession(URLSession, task: URLSessionTask, didReceive: URLAuthenticationChallenge) async -> (URLSession.AuthChallengeDisposition, URLCredential?)","type":"method"},{"path":"\/documentation\/httpx\/httpxtaskdelegate\/urlsession(_:task:willperformhttpredirection:newrequest:completionhandler:)","title":"func urlSession(URLSession, task: URLSessionTask, willPerformHTTPRedirection: HTTPURLResponse, newRequest: URLRequest, completionHandler: (URLRequest?) -> Void)","type":"method"}],"path":"\/documentation\/httpx\/httpxtaskdelegate","title":"HttpXTaskDelegate","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/mock\/addroute(networklocation:path:method:function:)","title":"func addRoute(networkLocation: String, path: Mock.Path, method: HTTPMethod, function: (URLRequest, [Mock.Path]) -> MockResponse)","type":"method"},{"path":"\/documentation\/httpx\/mock\/removeallroutes()","title":"func removeAllRoutes()","type":"method"},{"path":"\/documentation\/httpx\/mock\/removeroute(networklocation:path:method:)","title":"func removeRoute(networkLocation: String, path: Mock.Path, method: HTTPMethod)","type":"method"},{"path":"\/documentation\/httpx\/mock\/tojson()","title":"func toJson() -> [String : Any]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/httpx\/mock\/networklocation","title":"Mock.NetworkLocation","type":"typealias"},{"path":"\/documentation\/httpx\/mock\/path","title":"Mock.Path","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/mock\/getnowusing()","title":"static func getNowUsing() -> Mock?","type":"method"},{"path":"\/documentation\/httpx\/mock\/getshared()","title":"static func getShared() -> Mock","type":"method"},{"path":"\/documentation\/httpx\/mock\/start(_:)","title":"static func start(Mock?)","type":"method"},{"path":"\/documentation\/httpx\/mock\/stop()","title":"static func stop()","type":"method"}],"path":"\/documentation\/httpx\/mock","title":"Mock","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/mockresponse\/close()","title":"func close()","type":"method"},{"path":"\/documentation\/httpx\/mockresponse\/writedata(_:)","title":"func writeData(Data)","type":"method"}],"path":"\/documentation\/httpx\/mockresponse","title":"MockResponse","type":"class"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/httpx\/kdefaultmaxredirects","title":"let kDefaultMaxRedirects: Int","type":"var"},{"path":"\/documentation\/httpx\/kdefaulttimeout","title":"let kDefaultTimeout: TimeInterval","type":"var"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/httpx\/delete(url:content:params:headers:cookies:auth:timeout:followredirects:chunksize:)-3r6q1","title":"func delete(url: URLType, content: Content?, params: QueryParamsType?, headers: HeadersType?, cookies: CookiesType?, auth: AuthType?, timeout: TimeInterval, followRedirects: Bool, chunkSize: Int?) throws -> Response","type":"func"},{"path":"\/documentation\/httpx\/delete(url:content:params:headers:cookies:auth:timeout:followredirects:chunksize:)-eass","title":"func delete(url: URLType, content: Content?, params: QueryParamsType?, headers: HeadersType?, cookies: CookiesType?, auth: AuthType?, timeout: TimeInterval, followRedirects: Bool, chunkSize: Int?) async throws -> Response","type":"func"},{"path":"\/documentation\/httpx\/get(url:params:headers:cookies:auth:timeout:followredirects:chunksize:)-22shq","title":"func get(url: URLType, params: QueryParamsType?, headers: HeadersType?, cookies: CookiesType?, auth: AuthType?, timeout: TimeInterval, followRedirects: Bool, chunkSize: Int?) throws -> Response","type":"func"},{"path":"\/documentation\/httpx\/get(url:params:headers:cookies:auth:timeout:followredirects:chunksize:)-6dfgk","title":"func get(url: URLType, params: QueryParamsType?, headers: HeadersType?, cookies: CookiesType?, auth: AuthType?, timeout: TimeInterval, followRedirects: Bool, chunkSize: Int?) async throws -> Response","type":"func"},{"path":"\/documentation\/httpx\/patch(url:content:params:headers:cookies:auth:timeout:followredirects:chunksize:)-4rjuw","title":"func patch(url: URLType, content: Content?, params: QueryParamsType?, headers: HeadersType?, cookies: CookiesType?, auth: AuthType?, timeout: TimeInterval, followRedirects: Bool, chunkSize: Int?) async throws -> Response","type":"func"},{"path":"\/documentation\/httpx\/patch(url:content:params:headers:cookies:auth:timeout:followredirects:chunksize:)-6m1qp","title":"func patch(url: URLType, content: Content?, params: QueryParamsType?, headers: HeadersType?, cookies: CookiesType?, auth: AuthType?, timeout: TimeInterval, followRedirects: Bool, chunkSize: Int?) throws -> Response","type":"func"},{"path":"\/documentation\/httpx\/post(url:content:params:headers:cookies:auth:timeout:followredirects:chunksize:)-4spfl","title":"func post(url: URLType, content: Content?, params: QueryParamsType?, headers: HeadersType?, cookies: CookiesType?, auth: AuthType?, timeout: TimeInterval, followRedirects: Bool, chunkSize: Int?) throws -> Response","type":"func"},{"path":"\/documentation\/httpx\/post(url:content:params:headers:cookies:auth:timeout:followredirects:chunksize:)-81rrn","title":"func post(url: URLType, content: Content?, params: QueryParamsType?, headers: HeadersType?, cookies: CookiesType?, auth: AuthType?, timeout: TimeInterval, followRedirects: Bool, chunkSize: Int?) async throws -> Response","type":"func"},{"path":"\/documentation\/httpx\/put(url:content:params:headers:cookies:auth:timeout:followredirects:chunksize:)-7rkcn","title":"func put(url: URLType, content: Content?, params: QueryParamsType?, headers: HeadersType?, cookies: CookiesType?, auth: AuthType?, timeout: TimeInterval, followRedirects: Bool, chunkSize: Int?) async throws -> Response","type":"func"},{"path":"\/documentation\/httpx\/put(url:content:params:headers:cookies:auth:timeout:followredirects:chunksize:)-8u163","title":"func put(url: URLType, content: Content?, params: QueryParamsType?, headers: HeadersType?, cookies: CookiesType?, auth: AuthType?, timeout: TimeInterval, followRedirects: Bool, chunkSize: Int?) throws -> Response","type":"func"},{"path":"\/documentation\/httpx\/request(method:url:params:content:headers:cookies:auth:timeout:followredirects:chunksize:)-44zyt","title":"func request(method: HTTPMethod, url: URLType, params: QueryParamsType?, content: Content?, headers: HeadersType?, cookies: CookiesType?, auth: AuthType?, timeout: TimeInterval, followRedirects: Bool, chunkSize: Int?) throws -> Response","type":"func"},{"path":"\/documentation\/httpx\/request(method:url:params:content:headers:cookies:auth:timeout:followredirects:chunksize:)-76e36","title":"func request(method: HTTPMethod, url: URLType, params: QueryParamsType?, content: Content?, headers: HeadersType?, cookies: CookiesType?, auth: AuthType?, timeout: TimeInterval, followRedirects: Bool, chunkSize: Int?) async throws -> Response","type":"func"}],"path":"\/documentation\/httpx","title":"HttpX","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}