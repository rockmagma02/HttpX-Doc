{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Why-use-Client","level":2,"type":"heading","text":"Why use Client"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When using the Function API in HttpX, a new URLSession instance is created for each request, leading to inefficiency and potential performance issues."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To address this problem, utilizing the Client instead of the Function API will allow for reusing the same URLSession provided by Swift Foundation and implementing connection pooling to reuse connections and resources effectively."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This brings the following benefits compared to the top-level Function API:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Reduced the latency between requests (no need re-handshaking)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"persistent Cookies across requests"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Apply the same configuration to all requests"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Concurrent requests by multiple threads"}]}]}]},{"anchor":"Making-Request","level":2,"type":"heading","text":"Making Request"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To make a request using the Client, you need to create an instance of the Client and call the "},{"type":"codeVoice","code":"request"},{"type":"text","text":" method."}]},{"type":"codeListing","syntax":"swift","code":["let client = SyncClient()","let response = client.request(","    method: .get,","    url: URLType.string(\"https:\/\/www.example.com\")",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method take all same arguments as the top-level Function API, that means all features documented in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/GettingStarted"},{"type":"text","text":" page are available."}]},{"anchor":"Share-Configuration","level":2,"type":"heading","text":"Share Configuration"},{"type":"paragraph","inlineContent":[{"type":"text","text":"By Pass the Configuration when creating the Client instance, you can share the same configuration across all requests."}]},{"type":"codeListing","syntax":"swift","code":["let client = SyncClient(","    auth: AuthType.basic((\"user\", \"passwd\")),","    headers: HeadersType.dictionary([\"key\": \"value\"]),","    timeout: 10,","    defaultEncoding: .utf8",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then the all requests made by the client will use the same configuration above unless you override it in the request."}]},{"anchor":"Merge-Configuration","level":2,"type":"heading","text":"Merge Configuration"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For specific Configuration, You can pass them to the request method. If you pass the same configuration as the Client instance, the request configuration will override the Client configuration."}]},{"type":"codeListing","syntax":"swift","code":["let client = SyncClient(","    auth: AuthType.basic((\"user\", \"passwd\")),","    headers: HeadersType.dictionary([\"key\": \"value\"]),","    timeout: 10,","    defaultEncoding: .utf8",")","","let response = client.request(","    method: .get,","    url: URLType.string(\"https:\/\/www.example.com\"),","    headers: HeadersType.dictionary([\"key\": \"value2\"]),","    timeout: 5",")","\/\/ The request will use the headers `[\"key\": \"value2\"]` and timeout `5` instead of the client configuration."]},{"anchor":"Persistent-Cookies-by-Pass-CookieStorageIdentifier","level":2,"type":"heading","text":"Persistent Cookies by Pass CookieStorageIdentifier"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift Foundation provides a way to store cookies persistently across different App or App Extension by using the class method "},{"type":"codeVoice","code":"sharedCookieStorage(forGroupContainerIdentifier:)"},{"type":"text","text":" of "},{"type":"codeVoice","code":"HTTPCookieStorage"},{"type":"text","text":". You can pass the "},{"type":"codeVoice","code":"cookieIdentifier"},{"type":"text","text":" to the Client to enable this feature."}]},{"type":"codeListing","syntax":"swift","code":["let client = SyncClient(","    cookieIdentifier: \"com.example.app\"",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you donâ€™t pass the "},{"type":"codeVoice","code":"cookieStorageIdentifier"},{"type":"text","text":", the Client will create a new unique "},{"type":"codeVoice","code":"HTTPCookieStorage"},{"type":"text","text":" for each instance."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/httpx\/client"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/HttpX\/documentation\/HttpX\/Client","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"If you do anything more than experimentation, one-off scripts, or prototypes, then you should use a Client instance."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Client","role":"article","modules":[{"name":"HttpX"}]},"hierarchy":{"paths":[["doc:\/\/HttpX\/documentation\/HttpX"]]},"seeAlsoSections":[{"title":"Advanced Usage","identifiers":["doc:\/\/HttpX\/documentation\/HttpX\/UsefulTypes","doc:\/\/HttpX\/documentation\/HttpX\/RequestContent","doc:\/\/HttpX\/documentation\/HttpX\/Authentication","doc:\/\/HttpX\/documentation\/HttpX\/AsyncSupport","doc:\/\/HttpX\/documentation\/HttpX\/Timeout","doc:\/\/HttpX\/documentation\/HttpX\/EventHooks"],"generated":true}],"references":{"doc://HttpX/documentation/HttpX/Timeout":{"role":"article","title":"Timeout","abstract":[{"type":"text","text":"HttpX supports setting a timeout for requests. This can be done by pass the "},{"type":"codeVoice","code":"timeout"},{"type":"text","text":" argument to the request method."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/Timeout","kind":"article","type":"topic","url":"\/documentation\/httpx\/timeout"},"doc://HttpX/documentation/HttpX/RequestContent":{"role":"article","title":"Request Content","abstract":[{"type":"text","text":"HttpX provides some common Request Content types to make it easier to send requests with different types of content, Or User also can encode the content by themselves."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/RequestContent","kind":"article","type":"topic","url":"\/documentation\/httpx\/requestcontent"},"doc://HttpX/documentation/HttpX/Authentication":{"role":"article","title":"Authentication","abstract":[{"type":"text","text":"HttpX provides a flexible way to authenticate requests. You can use the "},{"type":"codeVoice","code":"AuthType"},{"type":"text","text":" enum to specify the authentication method you want to use."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/Authentication","kind":"article","type":"topic","url":"\/documentation\/httpx\/authentication"},"doc://HttpX/documentation/HttpX/UsefulTypes":{"role":"article","title":"Useful Types","abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"HttpX"}]},{"type":"text","text":" offers various types that facilitate working with HTTP requests and responses. These types allow users to specify arguments in different ways, such as passing the "},{"type":"codeVoice","code":"url"},{"type":"text","text":" as either a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" or a "},{"type":"codeVoice","code":"URL"},{"type":"text","text":"."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/UsefulTypes","kind":"article","type":"topic","url":"\/documentation\/httpx\/usefultypes"},"doc://HttpX/documentation/HttpX/AsyncSupport":{"role":"article","title":"Async Support","abstract":[{"type":"text","text":"HttpX provides support for async\/await, which allows you to write asynchronous code in swift ways."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/AsyncSupport","kind":"article","type":"topic","url":"\/documentation\/httpx\/asyncsupport"},"doc://HttpX/documentation/HttpX/GettingStarted":{"role":"article","title":"GettingStarted","abstract":[{"type":"text","text":"This Article will guide you on how to get started with HttpX."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/GettingStarted","kind":"article","type":"topic","url":"\/documentation\/httpx\/gettingstarted"},"doc://HttpX/documentation/HttpX/EventHooks":{"role":"article","title":"Event Hooks","abstract":[{"type":"text","text":"HTTPX provides the hooks that allow you to hook into the request\/response lifecycle. These hooks are useful for logging, debugging, and other purposes."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/EventHooks","kind":"article","type":"topic","url":"\/documentation\/httpx\/eventhooks"},"doc://HttpX/documentation/HttpX":{"role":"collection","title":"HttpX","abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"HttpX"}]},{"type":"text","text":" is a Swift package that provides easy-to-use HTTP client APIs,"},{"type":"text","text":" "},{"type":"text","text":"closely modeled after the API of the Python package "},{"type":"strong","inlineContent":[{"type":"text","text":"httpx"}]},{"type":"text","text":"."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX","kind":"symbol","type":"topic","url":"\/documentation\/httpx"}}}