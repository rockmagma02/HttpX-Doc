{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Basic-Authentication","level":2,"type":"heading","text":"Basic Authentication"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To use Basic Authentication, pass a tuple of the username and password to the "},{"type":"codeVoice","code":"basic"},{"type":"text","text":" case of the "},{"type":"codeVoice","code":"AuthType"},{"type":"text","text":" enum."}]},{"type":"codeListing","syntax":"swift","code":["let auth = AuthType.basic(\"username\", \"password\")","let response = HttpX.get(url: .string(\"https:\/\/www.example.com\"), auth: auth)"]},{"anchor":"Other-Built-in-Authentication-Methods","level":2,"type":"heading","text":"Other Built-in Authentication Methods"},{"type":"paragraph","inlineContent":[{"type":"text","text":"HttpX also provides other built-in authentication methods, such as "},{"type":"codeVoice","code":"digest"},{"type":"text","text":" and "},{"type":"codeVoice","code":"oauth"},{"type":"text","text":". You can use these methods by passing the appropriate parameters to the corresponding case of the "},{"type":"codeVoice","code":"AuthType"},{"type":"text","text":" enum."}]},{"anchor":"Api-Key-Authentication","level":3,"type":"heading","text":"Api-Key Authentication"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For the Api-Key Authentication, You can create an instance of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/APIKeyAuth"},{"type":"text","text":", and pass it to the "},{"type":"codeVoice","code":"class"},{"type":"text","text":" case of the "},{"type":"codeVoice","code":"AuthType"},{"type":"text","text":" enum."}]},{"type":"codeListing","syntax":"swift","code":["let auth = APIKeyAuth(key: \"your api key\")","let response = HttpX.get(url: .string(\"https:\/\/www.example.com\"), auth: .class(auth))"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"THe API-Key Auth will set the "},{"type":"codeVoice","code":"x-api-key"},{"type":"text","text":" header to the request."}]},{"anchor":"Digest-Authentication","level":3,"type":"heading","text":"Digest Authentication"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For the Digest Authentication, You can create an instance of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/DigestAuth"},{"type":"text","text":", and pass it to the "},{"type":"codeVoice","code":"class"},{"type":"text","text":" case of the "},{"type":"codeVoice","code":"AuthType"},{"type":"text","text":" enum."}]},{"type":"codeListing","syntax":"swift","code":["let auth = DigestAuth(username: \"username\", password: \"password\")","let response = HttpX.get(url: .string(\"https:\/\/www.example.com\"), auth: .class(auth))"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Digest Auth will receive the "},{"type":"codeVoice","code":"WWW-Authenticate"},{"type":"text","text":" header from the server and send the "},{"type":"codeVoice","code":"Authorization"},{"type":"text","text":" header to the server."}]},{"anchor":"OAuth-Authentication","level":3,"type":"heading","text":"OAuth Authentication"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For the OAuth Authentication, You can create an instance of the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/OAuth"},{"type":"text","text":", and pass it to the "},{"type":"codeVoice","code":"class"},{"type":"text","text":" case of the "},{"type":"codeVoice","code":"AuthType"},{"type":"text","text":" enum."}]},{"type":"codeListing","syntax":"swift","code":["let auth = OAuthAuth(token: \"your token\")","let response = HttpX.get(url: .string(\"https:\/\/www.example.com\"), auth: .class(auth))"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The OAuth Auth will set the "},{"type":"codeVoice","code":"Authorization"},{"type":"text","text":" header as "},{"type":"codeVoice","code":"Bearer token"},{"type":"text","text":" to the request."}]},{"anchor":"Function-based-Authentication","level":2,"type":"heading","text":"Function-based Authentication"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also use a function to authenticate requests. The function should take two parameters, a "},{"type":"codeVoice","code":"URLRequest"},{"type":"text","text":" and a "},{"type":"codeVoice","code":"Response"},{"type":"text","text":", and return a tuple containing the modified "},{"type":"codeVoice","code":"URLRequest"},{"type":"text","text":" and a "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":" value indicating whether the auth is done."}]},{"type":"codeListing","syntax":"swift","code":["let auth = AuthType.func { request, response in","    var request = request","    request.addValue(\"Bearer token\", forHTTPHeaderField: \"Authorization\")","    return (request, true)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Some time the auth need to use the response of the request to decide the next request. Like the Digest Auth, after you send the first request, the server will return the "},{"type":"codeVoice","code":"WWW-Authenticate"},{"type":"text","text":" header, and you need to use the header to generate the "},{"type":"codeVoice","code":"Authorization"},{"type":"text","text":" header for the next request. In this case, you can return "},{"type":"codeVoice","code":"false"},{"type":"text","text":" in the second value of the tuple to indicate the auth need to use the response."}]},{"anchor":"Custom-Authentication","level":2,"type":"heading","text":"Custom Authentication"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you have a custom authentication method, you can create a class that conforms to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/BaseAuth"},{"type":"text","text":" protocol and pass an instance of that class to the "},{"type":"codeVoice","code":"class"},{"type":"text","text":" case of the "},{"type":"codeVoice","code":"AuthType"},{"type":"text","text":" enum."}]},{"type":"codeListing","syntax":"swift","code":["class MyAuth: BaseAuth {","    needRequestBody = false","    needResponseBody = false","","    func authFlow(request: URLRequest?, response: Response?) -> (URLRequest?, Bool) {","        var request = request","        request.addValue(\"Bearer token\", forHTTPHeaderField: \"Authorization\")","        return (request, true)","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then you can pass an instance of the "},{"type":"codeVoice","code":"MyAuth"},{"type":"text","text":" class to the "},{"type":"codeVoice","code":"class"},{"type":"text","text":" case of the "},{"type":"codeVoice","code":"AuthType"},{"type":"text","text":" enum."}]},{"type":"codeListing","syntax":"swift","code":["let auth = MyAuth()","let response = HttpX.get(url: .string(\"https:\/\/www.example.com\"), auth: .class(auth))"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Similarly to the function-based authentication, you can return "},{"type":"codeVoice","code":"false"},{"type":"text","text":" in the second value of the tuple to indicate the auth need to use the response."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/httpx\/authentication"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/HttpX\/documentation\/HttpX\/Authentication","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"HttpX provides a flexible way to authenticate requests. You can use the "},{"type":"codeVoice","code":"AuthType"},{"type":"text","text":" enum to specify the authentication method you want to use."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Authentication","role":"article","modules":[{"name":"HttpX"}]},"hierarchy":{"paths":[["doc:\/\/HttpX\/documentation\/HttpX"]]},"seeAlsoSections":[{"title":"Advanced Usage","identifiers":["doc:\/\/HttpX\/documentation\/HttpX\/UsefulTypes","doc:\/\/HttpX\/documentation\/HttpX\/Client","doc:\/\/HttpX\/documentation\/HttpX\/RequestContent","doc:\/\/HttpX\/documentation\/HttpX\/AsyncSupport","doc:\/\/HttpX\/documentation\/HttpX\/Timeout","doc:\/\/HttpX\/documentation\/HttpX\/EventHooks"],"generated":true}],"references":{"doc://HttpX/documentation/HttpX/DigestAuth":{"role":"symbol","title":"DigestAuth","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DigestAuth"}],"abstract":[{"type":"text","text":"The DigestAuth class, user should provide the username and password."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/DigestAuth","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DigestAuth"}],"url":"\/documentation\/httpx\/digestauth"},"doc://HttpX/documentation/HttpX/BaseAuth":{"role":"symbol","title":"BaseAuth","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"BaseAuth"}],"abstract":[{"type":"text","text":"Protocol defining the base authentication flow."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/BaseAuth","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BaseAuth"}],"url":"\/documentation\/httpx\/baseauth"},"doc://HttpX/documentation/HttpX/RequestContent":{"role":"article","title":"Request Content","abstract":[{"type":"text","text":"HttpX provides some common Request Content types to make it easier to send requests with different types of content, Or User also can encode the content by themselves."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/RequestContent","kind":"article","type":"topic","url":"\/documentation\/httpx\/requestcontent"},"doc://HttpX/documentation/HttpX/APIKeyAuth":{"role":"symbol","title":"APIKeyAuth","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"APIKeyAuth"}],"abstract":[{"type":"text","text":"The APIKeyAuth class, user should provide the key."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/APIKeyAuth","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"APIKeyAuth"}],"url":"\/documentation\/httpx\/apikeyauth"},"doc://HttpX/documentation/HttpX":{"role":"collection","title":"HttpX","abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"HttpX"}]},{"type":"text","text":" is a Swift package that provides easy-to-use HTTP client APIs,"},{"type":"text","text":" "},{"type":"text","text":"closely modeled after the API of the Python package "},{"type":"strong","inlineContent":[{"type":"text","text":"httpx"}]},{"type":"text","text":"."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX","kind":"symbol","type":"topic","url":"\/documentation\/httpx"},"doc://HttpX/documentation/HttpX/OAuth":{"role":"symbol","title":"OAuth","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"OAuth"}],"abstract":[{"type":"text","text":"The OAuth class, user should provide the token."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/OAuth","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OAuth"}],"url":"\/documentation\/httpx\/oauth"},"doc://HttpX/documentation/HttpX/AsyncSupport":{"role":"article","title":"Async Support","abstract":[{"type":"text","text":"HttpX provides support for async\/await, which allows you to write asynchronous code in swift ways."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/AsyncSupport","kind":"article","type":"topic","url":"\/documentation\/httpx\/asyncsupport"},"doc://HttpX/documentation/HttpX/Timeout":{"role":"article","title":"Timeout","abstract":[{"type":"text","text":"HttpX supports setting a timeout for requests. This can be done by pass the "},{"type":"codeVoice","code":"timeout"},{"type":"text","text":" argument to the request method."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/Timeout","kind":"article","type":"topic","url":"\/documentation\/httpx\/timeout"},"doc://HttpX/documentation/HttpX/Client":{"role":"article","title":"Client","abstract":[{"type":"text","text":"If you do anything more than experimentation, one-off scripts, or prototypes, then you should use a Client instance."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/Client","kind":"article","type":"topic","url":"\/documentation\/httpx\/client"},"doc://HttpX/documentation/HttpX/UsefulTypes":{"role":"article","title":"Useful Types","abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"HttpX"}]},{"type":"text","text":" offers various types that facilitate working with HTTP requests and responses. These types allow users to specify arguments in different ways, such as passing the "},{"type":"codeVoice","code":"url"},{"type":"text","text":" as either a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" or a "},{"type":"codeVoice","code":"URL"},{"type":"text","text":"."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/UsefulTypes","kind":"article","type":"topic","url":"\/documentation\/httpx\/usefultypes"},"doc://HttpX/documentation/HttpX/EventHooks":{"role":"article","title":"Event Hooks","abstract":[{"type":"text","text":"HTTPX provides the hooks that allow you to hook into the request\/response lifecycle. These hooks are useful for logging, debugging, and other purposes."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/EventHooks","kind":"article","type":"topic","url":"\/documentation\/httpx\/eventhooks"}}}