{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Binary-Data","level":2,"type":"heading","text":"Binary Data"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can send binary data by passing a "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" object to the "},{"type":"codeVoice","code":"data"},{"type":"text","text":" case of the "},{"type":"codeVoice","code":"Content"},{"type":"text","text":" enum."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This situation is useful when you want to send a file or binary data in the request body. Don’t forget to set the "},{"type":"codeVoice","code":"Content-Type"},{"type":"text","text":" header to the appropriate value."}]},{"type":"codeListing","syntax":"swift","code":["let data = Data(\"Hello, World!\".utf8)","let response = try post(","    url: .string(\"https:\/\/www.example.com\"),","    content: .data(data),","    headers: .dictionary([\"Content-Type\": \"text\/plain\"]","  )"]},{"anchor":"Text","level":2,"type":"heading","text":"Text"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can send text data by passing a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" object to the "},{"type":"codeVoice","code":"text"},{"type":"text","text":" case of the "},{"type":"codeVoice","code":"Content"},{"type":"text","text":" enum."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This situation is useful when you want to send text data in the request body. Don’t forget to set the "},{"type":"codeVoice","code":"Content-Type"},{"type":"text","text":" header to the appropriate value."}]},{"type":"codeListing","syntax":"swift","code":["let response = try post(","    url: .string(\"https:\/\/www.example.com\"),","    content: .text(\"Hello, World!\"),","    headers: .dictionary([\"Content-Type\": \"text\/plain\"]","  )"]},{"anchor":"URL-Encoded-Form","level":2,"type":"heading","text":"URL Encoded Form"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can send URL-encoded form data by passing a dictionary to the "},{"type":"codeVoice","code":"urlEncoded"},{"type":"text","text":" case of the "},{"type":"codeVoice","code":"Content"},{"type":"text","text":" enum."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This situation is useful when you want to send form data in the request body. The Content-Type header will be set to "},{"type":"codeVoice","code":"application\/x-www-form-urlencoded"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["let response = try post(","    url: .string(\"https:\/\/www.example.com\"),","    content: .urlEncoded([\"key\": \"value\"])",")"]},{"anchor":"Multipart-Form","level":2,"type":"heading","text":"Multipart Form"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can send multipart form data by passing a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/MultiPart"},{"type":"text","text":" Object to the "},{"type":"codeVoice","code":"multipart"},{"type":"text","text":" case of the "},{"type":"codeVoice","code":"Content"},{"type":"text","text":" enum."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This situation is useful when you want to send form data and files in the request body. The Content-Type header will be set to "},{"type":"codeVoice","code":"multipart\/form-data"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["let multipart = MultiPart(","    fromData: [\"key\": \"value\"],","    fromFile: [\"file\": .init(path: url, filename: \"file.txt\", contentType: \"text\/plain\")]",")","","let response = try post(","    url: .string(\"https:\/\/www.example.com\"),","    content: .multipart(multipart)",")"]},{"anchor":"JSON","level":2,"type":"heading","text":"JSON"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can send JSON data by passing a any object to the "},{"type":"codeVoice","code":"json"},{"type":"text","text":" case of the "},{"type":"codeVoice","code":"Content"},{"type":"text","text":" enum, if the object can’t be encoded to JSON, the request will fail."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This situation is useful when you want to send JSON data in the request body. The Content-Type header will be set to "},{"type":"codeVoice","code":"application\/json"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["let response = try post(","    url: .string(\"https:\/\/www.example.com\"),","    content: .json([\"key\": \"value\"])",")"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/httpx\/requestcontent"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/HttpX\/documentation\/HttpX\/RequestContent","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"HttpX provides some common Request Content types to make it easier to send requests with different types of content, Or User also can encode the content by themselves."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Request Content","role":"article","modules":[{"name":"HttpX"}]},"hierarchy":{"paths":[["doc:\/\/HttpX\/documentation\/HttpX"]]},"seeAlsoSections":[{"title":"Advanced Usage","identifiers":["doc:\/\/HttpX\/documentation\/HttpX\/UsefulTypes","doc:\/\/HttpX\/documentation\/HttpX\/Client","doc:\/\/HttpX\/documentation\/HttpX\/Authentication","doc:\/\/HttpX\/documentation\/HttpX\/AsyncSupport","doc:\/\/HttpX\/documentation\/HttpX\/Timeout","doc:\/\/HttpX\/documentation\/HttpX\/EventHooks"],"generated":true}],"references":{"doc://HttpX/documentation/HttpX/AsyncSupport":{"role":"article","title":"Async Support","abstract":[{"type":"text","text":"HttpX provides support for async\/await, which allows you to write asynchronous code in swift ways."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/AsyncSupport","kind":"article","type":"topic","url":"\/documentation\/httpx\/asyncsupport"},"doc://HttpX/documentation/HttpX/Timeout":{"role":"article","title":"Timeout","abstract":[{"type":"text","text":"HttpX supports setting a timeout for requests. This can be done by pass the "},{"type":"codeVoice","code":"timeout"},{"type":"text","text":" argument to the request method."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/Timeout","kind":"article","type":"topic","url":"\/documentation\/httpx\/timeout"},"doc://HttpX/documentation/HttpX/MultiPart":{"role":"symbol","title":"MultiPart","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultiPart"}],"abstract":[{"type":"text","text":"A class to handle multipart\/form-data encoding which is often"},{"type":"text","text":" "},{"type":"text","text":"used for HTTP POST requests that require file upload along with data."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/MultiPart","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MultiPart"}],"url":"\/documentation\/httpx\/multipart"},"doc://HttpX/documentation/HttpX/Authentication":{"role":"article","title":"Authentication","abstract":[{"type":"text","text":"HttpX provides a flexible way to authenticate requests. You can use the "},{"type":"codeVoice","code":"AuthType"},{"type":"text","text":" enum to specify the authentication method you want to use."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/Authentication","kind":"article","type":"topic","url":"\/documentation\/httpx\/authentication"},"doc://HttpX/documentation/HttpX":{"role":"collection","title":"HttpX","abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"HttpX"}]},{"type":"text","text":" is a Swift package that provides easy-to-use HTTP client APIs,"},{"type":"text","text":" "},{"type":"text","text":"closely modeled after the API of the Python package "},{"type":"strong","inlineContent":[{"type":"text","text":"httpx"}]},{"type":"text","text":"."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX","kind":"symbol","type":"topic","url":"\/documentation\/httpx"},"doc://HttpX/documentation/HttpX/UsefulTypes":{"role":"article","title":"Useful Types","abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"HttpX"}]},{"type":"text","text":" offers various types that facilitate working with HTTP requests and responses. These types allow users to specify arguments in different ways, such as passing the "},{"type":"codeVoice","code":"url"},{"type":"text","text":" as either a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" or a "},{"type":"codeVoice","code":"URL"},{"type":"text","text":"."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/UsefulTypes","kind":"article","type":"topic","url":"\/documentation\/httpx\/usefultypes"},"doc://HttpX/documentation/HttpX/EventHooks":{"role":"article","title":"Event Hooks","abstract":[{"type":"text","text":"HTTPX provides the hooks that allow you to hook into the request\/response lifecycle. These hooks are useful for logging, debugging, and other purposes."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/EventHooks","kind":"article","type":"topic","url":"\/documentation\/httpx\/eventhooks"},"doc://HttpX/documentation/HttpX/Client":{"role":"article","title":"Client","abstract":[{"type":"text","text":"If you do anything more than experimentation, one-off scripts, or prototypes, then you should use a Client instance."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/Client","kind":"article","type":"topic","url":"\/documentation\/httpx\/client"}}}