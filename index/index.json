{"interfaceLanguages":{"swift":[{"children":[{"title":"Getting Started","type":"groupMarker"},{"path":"\/documentation\/httpx\/gettingstarted","title":"GettingStarted","type":"article"},{"title":"Advanced Usage","type":"groupMarker"},{"path":"\/documentation\/httpx\/usefultypes","title":"Useful Types","type":"article"},{"path":"\/documentation\/httpx\/client","title":"Client","type":"article"},{"path":"\/documentation\/httpx\/requestcontent","title":"Request Content","type":"article"},{"path":"\/documentation\/httpx\/authentication","title":"Authentication","type":"article"},{"path":"\/documentation\/httpx\/asyncsupport","title":"Async Support","type":"article"},{"path":"\/documentation\/httpx\/timeout","title":"Timeout","type":"article"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/httpx\/eventhooks\/init(request:response:)","title":"init(request: [(inout URLRequest) -> Void], response: [(inout Response) -> Void])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/eventhooks\/request","title":"var request: [(inout URLRequest) -> Void]","type":"property"},{"path":"\/documentation\/httpx\/eventhooks\/response","title":"var response: [(inout Response) -> Void]","type":"property"}],"path":"\/documentation\/httpx\/eventhooks","title":"Event Hooks","type":"article"},{"title":"API Reference","type":"groupMarker"},{"children":[{"title":"Synchronous","type":"groupMarker"},{"path":"\/documentation\/httpx\/request(method:url:params:content:headers:cookies:auth:timeout:followredirects:)-8kidy","title":"func request(method: HTTPMethod, url: URLType, params: QueryParamsType?, content: Content?, headers: HeadersType?, cookies: CookiesType?, auth: AuthType?, timeout: TimeInterval, followRedirects: Bool) throws -> Response","type":"func"},{"path":"\/documentation\/httpx\/stream(method:url:params:content:headers:cookies:auth:timeout:followredirects:chunksize:)-5gwrs","title":"func stream(method: HTTPMethod, url: URLType, params: QueryParamsType?, content: Content?, headers: HeadersType?, cookies: CookiesType?, auth: AuthType?, timeout: TimeInterval, followRedirects: Bool, chunkSize: Int) throws -> Response","type":"func"},{"path":"\/documentation\/httpx\/get(url:params:headers:cookies:auth:timeout:followredirects:)-83pl7","title":"func get(url: URLType, params: QueryParamsType?, headers: HeadersType?, cookies: CookiesType?, auth: AuthType?, timeout: TimeInterval, followRedirects: Bool) throws -> Response","type":"func"},{"path":"\/documentation\/httpx\/post(url:content:params:headers:cookies:auth:timeout:followredirects:)-6ofs3","title":"func post(url: URLType, content: Content?, params: QueryParamsType?, headers: HeadersType?, cookies: CookiesType?, auth: AuthType?, timeout: TimeInterval, followRedirects: Bool) throws -> Response","type":"func"},{"path":"\/documentation\/httpx\/patch(url:content:params:headers:cookies:auth:timeout:followredirects:)-7965j","title":"func patch(url: URLType, content: Content?, params: QueryParamsType?, headers: HeadersType?, cookies: CookiesType?, auth: AuthType?, timeout: TimeInterval, followRedirects: Bool) throws -> Response","type":"func"},{"path":"\/documentation\/httpx\/put(url:content:params:headers:cookies:auth:timeout:followredirects:)-9a6fj","title":"func put(url: URLType, content: Content?, params: QueryParamsType?, headers: HeadersType?, cookies: CookiesType?, auth: AuthType?, timeout: TimeInterval, followRedirects: Bool) throws -> Response","type":"func"},{"path":"\/documentation\/httpx\/delete(url:content:params:headers:cookies:auth:timeout:followredirects:)-8un0u","title":"func delete(url: URLType, content: Content?, params: QueryParamsType?, headers: HeadersType?, cookies: CookiesType?, auth: AuthType?, timeout: TimeInterval, followRedirects: Bool) throws -> Response","type":"func"},{"title":"Asynchronous","type":"groupMarker"},{"path":"\/documentation\/httpx\/request(method:url:params:content:headers:cookies:auth:timeout:followredirects:)-cha5","title":"func request(method: HTTPMethod, url: URLType, params: QueryParamsType?, content: Content?, headers: HeadersType?, cookies: CookiesType?, auth: AuthType?, timeout: TimeInterval, followRedirects: Bool) async throws -> Response","type":"func"},{"path":"\/documentation\/httpx\/stream(method:url:params:content:headers:cookies:auth:timeout:followredirects:chunksize:)-3vme1","title":"func stream(method: HTTPMethod, url: URLType, params: QueryParamsType?, content: Content?, headers: HeadersType?, cookies: CookiesType?, auth: AuthType?, timeout: TimeInterval, followRedirects: Bool, chunkSize: Int) async throws -> Response","type":"func"},{"path":"\/documentation\/httpx\/get(url:params:headers:cookies:auth:timeout:followredirects:)-dhaq","title":"func get(url: URLType, params: QueryParamsType?, headers: HeadersType?, cookies: CookiesType?, auth: AuthType?, timeout: TimeInterval, followRedirects: Bool) async throws -> Response","type":"func"},{"path":"\/documentation\/httpx\/post(url:content:params:headers:cookies:auth:timeout:followredirects:)-7a0yf","title":"func post(url: URLType, content: Content?, params: QueryParamsType?, headers: HeadersType?, cookies: CookiesType?, auth: AuthType?, timeout: TimeInterval, followRedirects: Bool) async throws -> Response","type":"func"},{"path":"\/documentation\/httpx\/patch(url:content:params:headers:cookies:auth:timeout:followredirects:)-6a5s3","title":"func patch(url: URLType, content: Content?, params: QueryParamsType?, headers: HeadersType?, cookies: CookiesType?, auth: AuthType?, timeout: TimeInterval, followRedirects: Bool) async throws -> Response","type":"func"},{"path":"\/documentation\/httpx\/put(url:content:params:headers:cookies:auth:timeout:followredirects:)-9mvpg","title":"func put(url: URLType, content: Content?, params: QueryParamsType?, headers: HeadersType?, cookies: CookiesType?, auth: AuthType?, timeout: TimeInterval, followRedirects: Bool) async throws -> Response","type":"func"},{"path":"\/documentation\/httpx\/delete(url:content:params:headers:cookies:auth:timeout:followredirects:)-4yh8m","title":"func delete(url: URLType, content: Content?, params: QueryParamsType?, headers: HeadersType?, cookies: CookiesType?, auth: AuthType?, timeout: TimeInterval, followRedirects: Bool) async throws -> Response","type":"func"}],"path":"\/documentation\/httpx\/toplevelapi","title":"Top Level API","type":"symbol"},{"children":[{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/httpx\/baseclient\/init(auth:params:headers:cookies:cookieidentifier:timeout:followredirects:maxredirects:eventhooks:baseurl:defaultencoding:)","title":"init(auth: AuthType?, params: QueryParamsType?, headers: HeadersType?, cookies: CookiesType?, cookieIdentifier: String?, timeout: TimeInterval, followRedirects: Bool, maxRedirects: Int, eventHooks: EventHooks, baseURL: URLType?, defaultEncoding: String.Encoding)","type":"init"},{"title":"Refer Configuration","type":"groupMarker"},{"path":"\/documentation\/httpx\/baseclient\/auth","title":"var auth: any BaseAuth","type":"property"},{"path":"\/documentation\/httpx\/baseclient\/baseurl","title":"var baseURL: URL?","type":"property"},{"path":"\/documentation\/httpx\/baseclient\/cookies","title":"var cookies: [HTTPCookie]","type":"property"},{"path":"\/documentation\/httpx\/baseclient\/defaultencoding","title":"var defaultEncoding: String.Encoding","type":"property"},{"path":"\/documentation\/httpx\/baseclient\/eventhooks","title":"var eventHooks: EventHooks","type":"property"},{"path":"\/documentation\/httpx\/baseclient\/followredirects","title":"var followRedirects: Bool","type":"property"},{"path":"\/documentation\/httpx\/baseclient\/headers","title":"var headers: [(String, String)]","type":"property"},{"path":"\/documentation\/httpx\/baseclient\/maxredirects","title":"var maxRedirects: Int","type":"property"},{"path":"\/documentation\/httpx\/baseclient\/timeout","title":"var timeout: TimeInterval","type":"property"},{"path":"\/documentation\/httpx\/baseclient\/params","title":"var params: [URLQueryItem]","type":"property"},{"title":"Set Configuration","type":"groupMarker"},{"path":"\/documentation\/httpx\/baseclient\/setauth(_:)","title":"func setAuth(AuthType)","type":"method"},{"path":"\/documentation\/httpx\/baseclient\/setbaseurl(_:)","title":"func setBaseURL(URLType)","type":"method"},{"path":"\/documentation\/httpx\/baseclient\/setcookies(_:)","title":"func setCookies(CookiesType)","type":"method"},{"path":"\/documentation\/httpx\/baseclient\/setdefaultencoding(_:)","title":"func setDefaultEncoding(String.Encoding)","type":"method"},{"path":"\/documentation\/httpx\/baseclient\/seteventhooks(_:)","title":"func setEventHooks(EventHooks)","type":"method"},{"path":"\/documentation\/httpx\/baseclient\/setredirects(follow:max:)","title":"func setRedirects(follow: Bool, max: Int)","type":"method"},{"path":"\/documentation\/httpx\/baseclient\/setheaders(_:)","title":"func setHeaders(HeadersType)","type":"method"},{"path":"\/documentation\/httpx\/baseclient\/settimeout(_:)","title":"func setTimeout(TimeInterval)","type":"method"},{"path":"\/documentation\/httpx\/baseclient\/setparams(_:)","title":"func setParams(QueryParamsType)","type":"method"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/baseclient\/buildrequest(method:url:content:params:headers:timeout:)","title":"func buildRequest(method: HTTPMethod, url: URLType?, content: Content?, params: QueryParamsType?, headers: HeadersType?, timeout: TimeInterval?) throws -> URLRequest","type":"method"}],"path":"\/documentation\/httpx\/baseclient","title":"BaseClient","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/httpx\/syncclient\/init(auth:params:headers:cookies:cookieidentifier:timeout:followredirects:maxredirects:eventhooks:baseurl:defaultencoding:)","title":"init(auth: AuthType?, params: QueryParamsType?, headers: HeadersType?, cookies: CookiesType?, cookieIdentifier: String?, timeout: TimeInterval, followRedirects: Bool, maxRedirects: Int, eventHooks: EventHooks, baseURL: URLType?, defaultEncoding: String.Encoding)","type":"init"},{"title":"Making Request","type":"groupMarker"},{"path":"\/documentation\/httpx\/syncclient\/request(method:url:content:params:headers:timeout:auth:followredirects:)","title":"func request(method: HTTPMethod, url: URLType, content: Content?, params: QueryParamsType?, headers: HeadersType?, timeout: TimeInterval?, auth: AuthType?, followRedirects: Bool?) throws -> Response","type":"method"},{"path":"\/documentation\/httpx\/syncclient\/stream(method:url:content:params:headers:timeout:auth:followredirects:chunksize:)","title":"func stream(method: HTTPMethod, url: URLType, content: Content?, params: QueryParamsType?, headers: HeadersType?, timeout: TimeInterval?, auth: AuthType?, followRedirects: Bool?, chunkSize: Int) throws -> Response","type":"method"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/syncclient\/sendrequest(request:stream:auth:followredirects:)","title":"func sendRequest(request: URLRequest, stream: (Bool, Int?), auth: AuthType?, followRedirects: Bool?) throws -> Response","type":"method"}],"path":"\/documentation\/httpx\/syncclient","title":"SyncClient","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/httpx\/asyncclient\/init(auth:params:headers:cookies:cookieidentifier:timeout:followredirects:maxredirects:eventhooks:baseurl:defaultencoding:)","title":"init(auth: AuthType?, params: QueryParamsType?, headers: HeadersType?, cookies: CookiesType?, cookieIdentifier: String?, timeout: TimeInterval, followRedirects: Bool, maxRedirects: Int, eventHooks: EventHooks, baseURL: URLType?, defaultEncoding: String.Encoding)","type":"init"},{"title":"Making Request","type":"groupMarker"},{"path":"\/documentation\/httpx\/asyncclient\/request(method:url:content:params:headers:timeout:auth:followredirects:)","title":"func request(method: HTTPMethod, url: URLType, content: Content?, params: QueryParamsType?, headers: HeadersType?, timeout: TimeInterval?, auth: AuthType?, followRedirects: Bool?) async throws -> Response","type":"method"},{"path":"\/documentation\/httpx\/asyncclient\/stream(method:url:content:params:headers:timeout:auth:followredirects:chunksize:)","title":"func stream(method: HTTPMethod, url: URLType, content: Content?, params: QueryParamsType?, headers: HeadersType?, timeout: TimeInterval?, auth: AuthType?, followRedirects: Bool?, chunkSize: Int?) async throws -> Response","type":"method"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/asyncclient\/sendrequest(request:stream:auth:followredirects:)","title":"func sendRequest(request: URLRequest, stream: (Bool, Int?), auth: AuthType?, followRedirects: Bool?) async throws -> Response","type":"method"}],"path":"\/documentation\/httpx\/asyncclient","title":"AsyncClient","type":"class"}],"path":"\/documentation\/httpx\/clientapi","title":"Client API","type":"symbol"},{"children":[{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/baseauth\/needrequestbody","title":"var needRequestBody: Bool","type":"property"},{"path":"\/documentation\/httpx\/baseauth\/needresponsebody","title":"var needResponseBody: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/baseauth\/authflow(request:lastresponse:)","title":"func authFlow(request: URLRequest?, lastResponse: Response?) throws -> (URLRequest?, Bool)","type":"method"}],"path":"\/documentation\/httpx\/baseauth","title":"BaseAuth","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/httpx\/basicauth\/init(username:password:)","title":"init(username: String, password: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/basicauth\/needrequestbody","title":"var needRequestBody: Bool","type":"property"},{"path":"\/documentation\/httpx\/basicauth\/needresponsebody","title":"var needResponseBody: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/basicauth\/authflow(request:lastresponse:)","title":"func authFlow(request: URLRequest?, lastResponse: Response?) throws -> (URLRequest?, Bool)","type":"method"}],"path":"\/documentation\/httpx\/basicauth","title":"BasicAuth","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/httpx\/functionauth\/init(authfunction:)","title":"init(authFunction: (URLRequest?, Response?) -> (URLRequest, Bool))","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/functionauth\/needrequestbody","title":"var needRequestBody: Bool","type":"property"},{"path":"\/documentation\/httpx\/functionauth\/needresponsebody","title":"var needResponseBody: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/functionauth\/authflow(request:lastresponse:)","title":"func authFlow(request: URLRequest?, lastResponse: Response?) -> (URLRequest?, Bool)","type":"method"}],"path":"\/documentation\/httpx\/functionauth","title":"FunctionAuth","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/httpx\/oauth\/init(token:)","title":"init(token: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/oauth\/needrequestbody","title":"var needRequestBody: Bool","type":"property"},{"path":"\/documentation\/httpx\/oauth\/needresponsebody","title":"var needResponseBody: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/oauth\/authflow(request:lastresponse:)","title":"func authFlow(request: URLRequest?, lastResponse: Response?) throws -> (URLRequest?, Bool)","type":"method"}],"path":"\/documentation\/httpx\/oauth","title":"OAuth","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/httpx\/apikeyauth\/init(key:)","title":"init(key: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/apikeyauth\/needrequestbody","title":"var needRequestBody: Bool","type":"property"},{"path":"\/documentation\/httpx\/apikeyauth\/needresponsebody","title":"var needResponseBody: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/apikeyauth\/authflow(request:lastresponse:)","title":"func authFlow(request: URLRequest?, lastResponse: Response?) throws -> (URLRequest?, Bool)","type":"method"}],"path":"\/documentation\/httpx\/apikeyauth","title":"APIKeyAuth","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/httpx\/digestauth\/init(username:password:)","title":"init(username: String, password: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/digestauth\/needrequestbody","title":"var needRequestBody: Bool","type":"property"},{"path":"\/documentation\/httpx\/digestauth\/needresponsebody","title":"var needResponseBody: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/digestauth\/authflow(request:lastresponse:)","title":"func authFlow(request: URLRequest?, lastResponse: Response?) throws -> (URLRequest?, Bool)","type":"method"}],"path":"\/documentation\/httpx\/digestauth","title":"DigestAuth","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/httpx\/emptyauth\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/emptyauth\/needrequestbody","title":"var needRequestBody: Bool","type":"property"},{"path":"\/documentation\/httpx\/emptyauth\/needresponsebody","title":"var needResponseBody: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/emptyauth\/authflow(request:lastresponse:)","title":"func authFlow(request: URLRequest?, lastResponse: Response?) -> (URLRequest?, Bool)","type":"method"}],"path":"\/documentation\/httpx\/emptyauth","title":"EmptyAuth","type":"class"}],"path":"\/documentation\/httpx\/authapi","title":"Auth API","type":"symbol"},{"children":[{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/httpx\/content\/data(_:)","title":"case data(Data)","type":"case"},{"path":"\/documentation\/httpx\/content\/json(_:)","title":"case json(Any)","type":"case"},{"path":"\/documentation\/httpx\/content\/multipart(_:)","title":"case multipart(MultiPart)","type":"case"},{"path":"\/documentation\/httpx\/content\/text(_:)","title":"case text(String)","type":"case"},{"path":"\/documentation\/httpx\/content\/urlencoded(_:)","title":"case urlEncoded([(String, String)])","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/content\/encodecontent(request:encode:)","title":"func encodeContent(request: inout URLRequest, encode: String.Encoding) throws","type":"method"}],"path":"\/documentation\/httpx\/content","title":"Content","type":"enum"},{"children":[{"title":"Body and Headers","type":"groupMarker"},{"path":"\/documentation\/httpx\/multipart\/contentlength","title":"var contentLength: Int","type":"property"},{"path":"\/documentation\/httpx\/multipart\/body","title":"var body: Data","type":"property"},{"path":"\/documentation\/httpx\/multipart\/headers","title":"var headers: [String : String]","type":"property"},{"title":"File","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/multipart\/file\/contenttype","title":"var contentType: String?","type":"property"},{"path":"\/documentation\/httpx\/multipart\/file\/filename","title":"var filename: String?","type":"property"},{"path":"\/documentation\/httpx\/multipart\/file\/headers","title":"var headers: [String : String]","type":"property"},{"path":"\/documentation\/httpx\/multipart\/file\/path","title":"var path: URL","type":"property"}],"path":"\/documentation\/httpx\/multipart\/file","title":"MultiPart.File","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/httpx\/multipart\/init(fromdata:fromfile:encoding:boundary:)","title":"init(fromData: [(String, Any)], fromFile: [(String, MultiPart.File)], encoding: String.Encoding, boundary: Data?) throws","type":"init"}],"path":"\/documentation\/httpx\/multipart","title":"MultiPart","type":"class"}],"path":"\/documentation\/httpx\/contentapi","title":"Client API","type":"symbol"},{"children":[{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/httpx\/httpmethod\/connect","title":"case connect","type":"case"},{"path":"\/documentation\/httpx\/httpmethod\/delete","title":"case delete","type":"case"},{"path":"\/documentation\/httpx\/httpmethod\/get","title":"case get","type":"case"},{"path":"\/documentation\/httpx\/httpmethod\/head","title":"case head","type":"case"},{"path":"\/documentation\/httpx\/httpmethod\/options","title":"case options","type":"case"},{"path":"\/documentation\/httpx\/httpmethod\/patch","title":"case patch","type":"case"},{"path":"\/documentation\/httpx\/httpmethod\/post","title":"case post","type":"case"},{"path":"\/documentation\/httpx\/httpmethod\/put","title":"case put","type":"case"},{"path":"\/documentation\/httpx\/httpmethod\/trace","title":"case trace","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/httpx\/httpmethod\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/httpx\/httpmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/httpx\/httpmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/httpmethod\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/httpmethod\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/httpx\/httpmethod\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/httpx\/httpmethod","title":"HTTPMethod","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/httpx\/urltype\/class(_:)","title":"case `class`(URL)","type":"case"},{"path":"\/documentation\/httpx\/urltype\/components(_:)","title":"case components(URLComponents)","type":"case"},{"path":"\/documentation\/httpx\/urltype\/string(_:)","title":"case string(String)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/urltype\/buildurl()","title":"func buildURL() -> URL?","type":"method"}],"path":"\/documentation\/httpx\/urltype","title":"URLType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/httpx\/queryparamstype\/array(_:)","title":"case array([(String, String)])","type":"case"},{"path":"\/documentation\/httpx\/queryparamstype\/class(_:)","title":"case `class`([URLQueryItem])","type":"case"},{"path":"\/documentation\/httpx\/queryparamstype\/dictionary(_:)","title":"case dictionary([String : String])","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/queryparamstype\/buildqueryitems()","title":"func buildQueryItems() -> [URLQueryItem]","type":"method"}],"path":"\/documentation\/httpx\/queryparamstype","title":"QueryParamsType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/httpx\/headerstype\/array(_:)","title":"case array([(String, String)])","type":"case"},{"path":"\/documentation\/httpx\/headerstype\/dictionary(_:)","title":"case dictionary([String : String])","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/headerstype\/buildheaders()","title":"func buildHeaders() -> [(String, String)]","type":"method"}],"path":"\/documentation\/httpx\/headerstype","title":"HeadersType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/httpx\/cookiestype\/array(_:)","title":"case array([(String, String, String, String?)])","type":"case"},{"path":"\/documentation\/httpx\/cookiestype\/cookiearray(_:)","title":"case cookieArray([HTTPCookie])","type":"case"},{"path":"\/documentation\/httpx\/cookiestype\/storage(_:)","title":"case storage(HTTPCookieStorage)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/cookiestype\/buildcookies()","title":"func buildCookies() -> [HTTPCookie]","type":"method"}],"path":"\/documentation\/httpx\/cookiestype","title":"CookiesType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/httpx\/authtype\/basic(_:)","title":"case basic((String, String))","type":"case"},{"path":"\/documentation\/httpx\/authtype\/class(_:)","title":"case `class`(any BaseAuth)","type":"case"},{"path":"\/documentation\/httpx\/authtype\/func(_:)","title":"case `func`((URLRequest?, Response?) -> (URLRequest, Bool))","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/authtype\/buildauth()","title":"func buildAuth() -> any BaseAuth","type":"method"}],"path":"\/documentation\/httpx\/authtype","title":"AuthType","type":"enum"}],"path":"\/documentation\/httpx\/typeapi","title":"Type API","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/foundation\/url\/isabsoluteurl","title":"var isAbsoluteURL: Bool","type":"property"},{"path":"\/documentation\/httpx\/foundation\/url\/isrelativeurl","title":"var isRelativeURL: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/foundation\/url\/mergequeryitems(_:)","title":"func mergeQueryItems([URLQueryItem]) throws","type":"method"},{"path":"\/documentation\/httpx\/foundation\/url\/networklocation(percentencoded:)","title":"func networkLocation(percentEncoded: Bool) -> String","type":"method"}],"path":"\/documentation\/httpx\/foundation\/url","title":"URL","type":"extension"},{"children":[{"children":[{"title":"Get Response DaTa","type":"groupMarker"},{"path":"\/documentation\/httpx\/response\/data","title":"var data: Data?","type":"property"},{"path":"\/documentation\/httpx\/response\/syncstream","title":"var syncStream: SyncResponseStream?","type":"property"},{"path":"\/documentation\/httpx\/response\/asyncstream","title":"var asyncStream: AsyncStream<Data>?","type":"property"},{"path":"\/documentation\/httpx\/response\/readallformsyncstream()","title":"func readAllFormSyncStream()","type":"method"},{"path":"\/documentation\/httpx\/response\/readallformasyncstream()","title":"func readAllFormAsyncStream() async","type":"method"},{"title":"Get Response Information","type":"groupMarker"},{"path":"\/documentation\/httpx\/response\/statuscode","title":"var statusCode: Int?","type":"property"},{"path":"\/documentation\/httpx\/response\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/httpx\/response\/urlresponse","title":"var URLResponse: URLResponse?","type":"property"},{"path":"\/documentation\/httpx\/response\/history","title":"var history: [Response]","type":"property"},{"path":"\/documentation\/httpx\/response\/nextrequest","title":"var nextRequest: URLRequest?","type":"property"},{"title":"Get Error","type":"groupMarker"},{"path":"\/documentation\/httpx\/response\/error","title":"var error: (any Error)?","type":"property"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/httpx\/response\/init(urlresponse:data:)","title":"init(URLResponse: URLResponse?, data: Data?)","type":"init"}],"path":"\/documentation\/httpx\/response","title":"Response","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/foundation\/urlresponse\/allheaders","title":"var allHeaders: [AnyHashable : Any]","type":"property"},{"path":"\/documentation\/httpx\/foundation\/urlresponse\/hasredirectlocation","title":"var hasRedirectLocation: Bool","type":"property"},{"path":"\/documentation\/httpx\/foundation\/urlresponse\/isclienterror","title":"var isClientError: Bool","type":"property"},{"path":"\/documentation\/httpx\/foundation\/urlresponse\/iserror","title":"var isError: Bool","type":"property"},{"path":"\/documentation\/httpx\/foundation\/urlresponse\/isinformational","title":"var isInformational: Bool","type":"property"},{"path":"\/documentation\/httpx\/foundation\/urlresponse\/isredirect","title":"var isRedirect: Bool","type":"property"},{"path":"\/documentation\/httpx\/foundation\/urlresponse\/isservererror","title":"var isServerError: Bool","type":"property"},{"path":"\/documentation\/httpx\/foundation\/urlresponse\/issuccess","title":"var isSuccess: Bool","type":"property"},{"path":"\/documentation\/httpx\/foundation\/urlresponse\/status","title":"var status: (Int?, String?)","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/foundation\/urlresponse\/getheadervalue(forhttpheaderfield:)","title":"func getHeaderValue(forHTTPHeaderField: String) -> String?","type":"method"}],"path":"\/documentation\/httpx\/foundation\/urlresponse","title":"URLResponse","type":"extension"}],"path":"\/documentation\/httpx\/responseapi","title":"Response API","type":"symbol"},{"children":[{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/httpx\/autherror\/==(_:_:)","title":"static func == (AuthError, AuthError) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/httpx\/autherror\/invaliddigestauth(message:)","title":"case invalidDigestAuth(message: String)","type":"case"},{"path":"\/documentation\/httpx\/autherror\/invalidrequest(message:)","title":"case invalidRequest(message: String)","type":"case"},{"path":"\/documentation\/httpx\/autherror\/qopnotsupported(message:)","title":"case qopNotSupported(message: String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/httpx\/autherror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/httpx\/autherror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/autherror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/httpx\/autherror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/httpx\/autherror","title":"AuthError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/httpx\/streamerror\/streamhasclosed","title":"case streamHasClosed","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/httpx\/streamerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/httpx\/streamerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/streamerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/httpx\/streamerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/httpx\/streamerror","title":"StreamError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/httpx\/contenterror\/pathnotfound","title":"case pathNotFound","type":"case"},{"path":"\/documentation\/httpx\/contenterror\/unsupportedtype","title":"case unsupportedType","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/httpx\/contenterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/httpx\/contenterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/contenterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/httpx\/contenterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/httpx\/contenterror","title":"ContentError","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/httpx\/httpxerror\/==(_:_:)","title":"static func == (HttpXError, HttpXError) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/httpx\/httpxerror\/invalidrequest(message:)","title":"case invalidRequest(message: String)","type":"case"},{"path":"\/documentation\/httpx\/httpxerror\/invalidresponse(message:)","title":"case invalidResponse(message: String)","type":"case"},{"path":"\/documentation\/httpx\/httpxerror\/invalidurl(message:)","title":"case invalidURL(message: String)","type":"case"},{"path":"\/documentation\/httpx\/httpxerror\/networkerror(message:code:)","title":"case networkError(message: String, code: Int)","type":"case"},{"path":"\/documentation\/httpx\/httpxerror\/redirecterror(message:)","title":"case redirectError(message: String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/httpx\/httpxerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/httpx\/httpxerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/httpxerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/httpx\/httpxerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/httpx\/httpxerror","title":"HttpXError","type":"enum"}],"path":"\/documentation\/httpx\/errorapi","title":"Error API","type":"symbol"},{"children":[{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/foundation\/inputstream\/readalldata(buffersize:)","title":"func readAllData(bufferSize: Int) -> Data","type":"method"}],"path":"\/documentation\/httpx\/foundation\/inputstream","title":"InputStream","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/syncstreamdelegate\/urlsession(_:datatask:didreceive:)","title":"func urlSession(URLSession, dataTask: URLSessionDataTask, didReceive: Data)","type":"method"},{"path":"\/documentation\/httpx\/syncstreamdelegate\/urlsession(_:datatask:didreceive:completionhandler:)","title":"func urlSession(URLSession, dataTask: URLSessionDataTask, didReceive: URLResponse, completionHandler: (URLSession.ResponseDisposition) -> Void)","type":"method"},{"path":"\/documentation\/httpx\/syncstreamdelegate\/urlsession(_:didcreatetask:)","title":"func urlSession(URLSession, didCreateTask: URLSessionTask)","type":"method"},{"path":"\/documentation\/httpx\/syncstreamdelegate\/urlsession(_:task:didcompletewitherror:)","title":"func urlSession(URLSession, task: URLSessionTask, didCompleteWithError: (any Error)?)","type":"method"}],"path":"\/documentation\/httpx\/syncstreamdelegate","title":"SyncStreamDelegate","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/syncresponsestream\/makeiterator()","title":"func makeIterator() -> SyncResponseStream","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/next()","title":"func next() -> Data?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/httpx\/syncresponsestream\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/httpx\/syncresponsestream\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/httpx\/syncresponsestream\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/syncresponsestream\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/filter(_:)-6uoth","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/filter(_:)-7ghqu","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/flatmap(_:)-3a7ti","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/flatmap(_:)-ctvv","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/joined(separator:)","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/map(_:)","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/sorted(using:)-118by","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/sorted(using:)-3sbjc","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/httpx\/syncresponsestream\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/httpx\/syncresponsestream\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/httpx\/syncresponsestream","title":"SyncResponseStream","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/asyncstreamdelegate\/urlsession(_:datatask:didreceive:)","title":"func urlSession(URLSession, dataTask: URLSessionDataTask, didReceive: Data)","type":"method"},{"path":"\/documentation\/httpx\/asyncstreamdelegate\/urlsession(_:datatask:didreceive:completionhandler:)","title":"func urlSession(URLSession, dataTask: URLSessionDataTask, didReceive: URLResponse, completionHandler: (URLSession.ResponseDisposition) -> Void)","type":"method"},{"path":"\/documentation\/httpx\/asyncstreamdelegate\/urlsession(_:didcreatetask:)","title":"func urlSession(URLSession, didCreateTask: URLSessionTask)","type":"method"},{"path":"\/documentation\/httpx\/asyncstreamdelegate\/urlsession(_:task:didcompletewitherror:)","title":"func urlSession(URLSession, task: URLSessionTask, didCompleteWithError: (any Error)?)","type":"method"}],"path":"\/documentation\/httpx\/asyncstreamdelegate","title":"AsyncStreamDelegate","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/httpxdelegate\/urlsession(_:didreceive:completionhandler:)","title":"func urlSession(URLSession, didReceive: URLAuthenticationChallenge, completionHandler: (URLSession.AuthChallengeDisposition, URLCredential?) -> Void)","type":"method"},{"path":"\/documentation\/httpx\/httpxdelegate\/urlsession(_:task:willperformhttpredirection:newrequest:completionhandler:)","title":"func urlSession(URLSession, task: URLSessionTask, willPerformHTTPRedirection: HTTPURLResponse, newRequest: URLRequest, completionHandler: (URLRequest?) -> Void)","type":"method"}],"path":"\/documentation\/httpx\/httpxdelegate","title":"HttpXDelegate","type":"class"}],"path":"\/documentation\/httpx\/streamapi","title":"Stream API","type":"symbol"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/mock\/addroute(networklocation:path:method:function:)","title":"func addRoute(networkLocation: String, path: Mock.Path, method: HTTPMethod, function: (URLRequest, [Mock.Path]) -> MockResponse)","type":"method"},{"path":"\/documentation\/httpx\/mock\/removeallroutes()","title":"func removeAllRoutes()","type":"method"},{"path":"\/documentation\/httpx\/mock\/removeroute(networklocation:path:method:)","title":"func removeRoute(networkLocation: String, path: Mock.Path, method: HTTPMethod)","type":"method"},{"path":"\/documentation\/httpx\/mock\/tojson()","title":"func toJson() -> [String : Any]","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/httpx\/mock\/networklocation","title":"Mock.NetworkLocation","type":"typealias"},{"path":"\/documentation\/httpx\/mock\/path","title":"Mock.Path","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/httpx\/mock\/getnowusing()","title":"static func getNowUsing() -> Mock?","type":"method"},{"path":"\/documentation\/httpx\/mock\/getshared()","title":"static func getShared() -> Mock","type":"method"},{"path":"\/documentation\/httpx\/mock\/start(_:)","title":"static func start(Mock?)","type":"method"},{"path":"\/documentation\/httpx\/mock\/stop()","title":"static func stop()","type":"method"}],"path":"\/documentation\/httpx\/mock","title":"Mock","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/httpx\/mockresponse\/init(errorcode:errormessage:)","title":"init(errorCode: Int, errorMessage: String?)","type":"init"},{"path":"\/documentation\/httpx\/mockresponse\/init(request:data:statuscode:headers:)","title":"init(request: URLRequest, data: Data?, statusCode: Int, headers: [String : String])","type":"init"},{"path":"\/documentation\/httpx\/mockresponse\/init(request:datastream:statuscode:headers:)","title":"init(request: URLRequest, dataStream: AsyncStream<Data>, statusCode: Int, headers: [String : String])","type":"init"}],"path":"\/documentation\/httpx\/mockresponse","title":"MockResponse","type":"class"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/httpx\/kdefaultchunksize","title":"let kDefaultChunkSize: Int","type":"var"},{"path":"\/documentation\/httpx\/kdefaultmaxredirects","title":"let kDefaultMaxRedirects: Int","type":"var"},{"path":"\/documentation\/httpx\/kdefaulttimeout","title":"let kDefaultTimeout: TimeInterval","type":"var"}],"path":"\/documentation\/httpx","title":"HttpX","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}