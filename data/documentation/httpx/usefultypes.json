{"primaryContentSections":[{"kind":"content","content":[{"anchor":"URLType","level":2,"type":"heading","text":"URLType"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"URLType"},{"type":"text","text":" type is an enum that allows users to specify the "},{"type":"codeVoice","code":"url"},{"type":"text","text":" argument in different ways. The "},{"type":"codeVoice","code":"URLType"},{"type":"text","text":" enum has three cases: "},{"type":"codeVoice","code":"string"},{"type":"text","text":", "},{"type":"codeVoice","code":"class"},{"type":"text","text":", "},{"type":"codeVoice","code":"components"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["URLType.string(_: string)","URLType.class(_: Foundation.URL)","URLType.components(_: Foundation.URLComponents)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Usually, you can use the URLType object to pass to the API which HttpX provides. For example, you can pass the "},{"type":"codeVoice","code":"URLType"},{"type":"text","text":" object to the "},{"type":"codeVoice","code":"get"},{"type":"text","text":" method of the "},{"type":"codeVoice","code":"HttpX"},{"type":"text","text":" object."}]},{"type":"codeListing","syntax":"swift","code":["let url = URLType.string(\"https:\/\/www.example.com\")","let response = HttpX.get(url: url)"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"URLType"},{"type":"text","text":" can easily be converted to a "},{"type":"codeVoice","code":"URL"},{"type":"text","text":" object by using the "},{"type":"codeVoice","code":"buildURL"},{"type":"text","text":" method."}]},{"type":"codeListing","syntax":"swift","code":["let urlType = URLType.string(\"https:\/\/www.example.com\")","let url: FoundationURL = urlType.buildURL()"]},{"anchor":"QueryParamsType","level":2,"type":"heading","text":"QueryParamsType"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"QueryParamsType"},{"type":"text","text":" type is an enum that allows users to specify the "},{"type":"codeVoice","code":"query"},{"type":"text","text":" argument in different ways. The "},{"type":"codeVoice","code":"QueryParamsType"},{"type":"text","text":" enum has three case: "},{"type":"codeVoice","code":"class"},{"type":"text","text":", "},{"type":"codeVoice","code":"dictionary"},{"type":"text","text":", "},{"type":"codeVoice","code":"array"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["QueryParamsType.class(_: [URLQueryItem])","QueryParamsType.dictionary(_: [String: String])","QueryParamsType.array(_: [(String, String)])"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can choose one way to build a QueryParams to pass to the API which HttpX provides. For example, you can pass the "},{"type":"codeVoice","code":"QueryParamsType"},{"type":"text","text":" object to the "},{"type":"codeVoice","code":"get"},{"type":"text","text":" method of the "},{"type":"codeVoice","code":"HttpX"},{"type":"text","text":" object."}]},{"type":"codeListing","syntax":"swift","code":["let query = QueryParamsType.dictionary([\"key\": \"value\"])","let response = HttpX.get(url: URLType.string(\"https:\/\/www.example.com\"), query: query)"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"QueryParamsType"},{"type":"text","text":" can easily be converted to a "},{"type":"codeVoice","code":"[URLQueryItem]"},{"type":"text","text":" object by using the "},{"type":"codeVoice","code":"buildQueryItems"},{"type":"text","text":" method."}]},{"type":"codeListing","syntax":"swift","code":["let queryParamsType = QueryParamsType.dictionary([\"key\": \"value\"])","let queryItems: [URLQueryItem] = queryParamsType.buildQueryItems()"]},{"anchor":"Content","level":2,"type":"heading","text":"Content"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Content"},{"type":"text","text":" type is an enum that allows users to specify the "},{"type":"codeVoice","code":"content"},{"type":"text","text":" argument in different ways. The "},{"type":"codeVoice","code":"Content"},{"type":"text","text":" enum has five cases: "},{"type":"codeVoice","code":"data"},{"type":"text","text":", "},{"type":"codeVoice","code":"string"},{"type":"text","text":", "},{"type":"codeVoice","code":"urlEncoded"},{"type":"text","text":", "},{"type":"codeVoice","code":"multipart"},{"type":"text","text":", "},{"type":"codeVoice","code":"json"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For more information about the Content type, see the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/Content"},{"type":"text","text":" page."}]},{"anchor":"HeadersType","level":2,"type":"heading","text":"HeadersType"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"HeadersType"},{"type":"text","text":" type is an enum that allows users to specify the "},{"type":"codeVoice","code":"headers"},{"type":"text","text":" argument in different ways. The "},{"type":"codeVoice","code":"HeadersType"},{"type":"text","text":" enum has two cases: "},{"type":"codeVoice","code":"array"},{"type":"text","text":", "},{"type":"codeVoice","code":"dictionary"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["HeadersType.array(_: [(String, String)])","HeadersType.dictionary(_: [String: String])"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can choose one way to build a Headers to pass to the API which HttpX provides. For example, you can pass the "},{"type":"codeVoice","code":"HeadersType"},{"type":"text","text":" object to the "},{"type":"codeVoice","code":"get"},{"type":"text","text":" method of the "},{"type":"codeVoice","code":"HttpX"},{"type":"text","text":" object."}]},{"type":"codeListing","syntax":"swift","code":["let headers = HeadersType.dictionary([\"key\": \"value\"])","let response = HttpX.get(url: URLType.string(\"https:\/\/www.example.com\"), headers: headers)"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"HeadersType"},{"type":"text","text":" can easily be converted to a "},{"type":"codeVoice","code":"[(String, String)]"},{"type":"text","text":" object by using the "},{"type":"codeVoice","code":"buildHeaders"},{"type":"text","text":" method."}]},{"type":"codeListing","syntax":"swift","code":["let headersType = HeadersType.dictionary([\"key\": \"value\"])","let headers: [(String, String)] = headersType.buildHeaders()"]},{"anchor":"CookiesType","level":2,"type":"heading","text":"CookiesType"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"CookiesType"},{"type":"text","text":" type is an enum that allows users to specify the "},{"type":"codeVoice","code":"cookies"},{"type":"text","text":" argument in different ways. The "},{"type":"codeVoice","code":"CookiesType"},{"type":"text","text":" enum has three cases: "},{"type":"codeVoice","code":"array"},{"type":"text","text":", "},{"type":"codeVoice","code":"cookieArray"},{"type":"text","text":", "},{"type":"codeVoice","code":"storage"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["CookiesType.array(_: [(String, String, String, String)]) \/\/ (name, value, domain, path)","CookiesType.cookieArray(_: [Foundation.HTTPCookie])","CookiesType.storage(_: Foundation.HTTPCookieStorage)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can choose one way to build a Cookies to pass to the API which HttpX provides. For example, you can pass the "},{"type":"codeVoice","code":"CookiesType"},{"type":"text","text":" object to the "},{"type":"codeVoice","code":"get"},{"type":"text","text":" method of the "},{"type":"codeVoice","code":"HttpX"},{"type":"text","text":" object."}]},{"type":"codeListing","syntax":"swift","code":["let cookies = CookiesType.array([(\"name\", \"value\", \"domain\", \"path\")])","let response = HttpX.get(url: URLType.string(\"https:\/\/www.example.com\"), cookies: cookies)"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"CookiesType"},{"type":"text","text":" can easily be converted to a "},{"type":"codeVoice","code":"[HTTPCookie]"},{"type":"text","text":" object by using the "},{"type":"codeVoice","code":"buildCookies"},{"type":"text","text":" method."}]},{"type":"codeListing","syntax":"swift","code":["let cookiesType = CookiesType.array([(\"name\", \"value\", \"domain\", \"path\")])","let cookies: [HTTPCookie] = cookiesType.buildCookies()"]},{"anchor":"AuthType","level":2,"type":"heading","text":"AuthType"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"AuthType"},{"type":"text","text":" type is an enum that allows users to specify the "},{"type":"codeVoice","code":"auth"},{"type":"text","text":" argument in different ways. The "},{"type":"codeVoice","code":"AuthType"},{"type":"text","text":" enum has two cases: "},{"type":"codeVoice","code":"class"},{"type":"text","text":", "},{"type":"codeVoice","code":"func"},{"type":"text","text":", "},{"type":"codeVoice","code":"basic"}]},{"type":"codeListing","syntax":"swift","code":["AuthType.class(_: any BaseAuth)","AuthType.func(_: (URLRequest?, Response?) -> (URLRequest, Bool))","AuthType.basic(_: (String, String)) \/\/ (username, password)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can choose one way to build a Auth to pass to the API which HttpX provides. For example, you can pass the "},{"type":"codeVoice","code":"AuthType"},{"type":"text","text":" object to the "},{"type":"codeVoice","code":"get"},{"type":"text","text":" method of the "},{"type":"codeVoice","code":"HttpX"},{"type":"text","text":" object."}]},{"type":"codeListing","syntax":"swift","code":["let auth = AuthType.basic(\"username\", \"password\")","let response = HttpX.get(url: URLType.string(\"https:\/\/www.example.com\"), auth: auth)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For more information about the "},{"type":"codeVoice","code":"BaseAuth"},{"type":"text","text":" protocol, and Function-based authentication, see the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/Authentication"}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"AuthType"},{"type":"text","text":" can easily be converted to a "},{"type":"codeVoice","code":"BaseAuth"},{"type":"text","text":" object by using the "},{"type":"codeVoice","code":"buildAuth"},{"type":"text","text":" method."}]},{"type":"codeListing","syntax":"swift","code":["let authType = AuthType.basic(\"username\", \"password\")","let auth: BaseAuth = authType.buildAuth()"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/httpx\/usefultypes"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/HttpX\/documentation\/HttpX\/UsefulTypes","interfaceLanguage":"swift"},"abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"HttpX"}]},{"type":"text","text":" offers various types that facilitate working with HTTP requests and responses. These types allow users to specify arguments in different ways, such as passing the "},{"type":"codeVoice","code":"url"},{"type":"text","text":" as either a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" or a "},{"type":"codeVoice","code":"URL"},{"type":"text","text":"."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Useful Types","role":"article","modules":[{"name":"HttpX"}]},"hierarchy":{"paths":[["doc:\/\/HttpX\/documentation\/HttpX"]]},"seeAlsoSections":[{"title":"Advanced Usage","identifiers":["doc:\/\/HttpX\/documentation\/HttpX\/Client","doc:\/\/HttpX\/documentation\/HttpX\/RequestContent","doc:\/\/HttpX\/documentation\/HttpX\/Authentication","doc:\/\/HttpX\/documentation\/HttpX\/AsyncSupport","doc:\/\/HttpX\/documentation\/HttpX\/Timeout","doc:\/\/HttpX\/documentation\/HttpX\/EventHooks"],"generated":true}],"references":{"doc://HttpX/documentation/HttpX/RequestContent":{"role":"article","title":"Request Content","abstract":[{"type":"text","text":"HttpX provides some common Request Content types to make it easier to send requests with different types of content, Or User also can encode the content by themselves."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/RequestContent","kind":"article","type":"topic","url":"\/documentation\/httpx\/requestcontent"},"doc://HttpX/documentation/HttpX/EventHooks":{"role":"article","title":"Event Hooks","abstract":[{"type":"text","text":"HTTPX provides the hooks that allow you to hook into the request\/response lifecycle. These hooks are useful for logging, debugging, and other purposes."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/EventHooks","kind":"article","type":"topic","url":"\/documentation\/httpx\/eventhooks"},"doc://HttpX/documentation/HttpX/Client":{"role":"article","title":"Client","abstract":[{"type":"text","text":"If you do anything more than experimentation, one-off scripts, or prototypes, then you should use a Client instance."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/Client","kind":"article","type":"topic","url":"\/documentation\/httpx\/client"},"doc://HttpX/documentation/HttpX":{"role":"collection","title":"HttpX","abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"HttpX"}]},{"type":"text","text":" is a Swift package that provides easy-to-use HTTP client APIs,"},{"type":"text","text":" "},{"type":"text","text":"closely modeled after the API of the Python package "},{"type":"strong","inlineContent":[{"type":"text","text":"httpx"}]},{"type":"text","text":"."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX","kind":"symbol","type":"topic","url":"\/documentation\/httpx"},"doc://HttpX/documentation/HttpX/AsyncSupport":{"role":"article","title":"Async Support","abstract":[{"type":"text","text":"HttpX provides support for async\/await, which allows you to write asynchronous code in swift ways."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/AsyncSupport","kind":"article","type":"topic","url":"\/documentation\/httpx\/asyncsupport"},"doc://HttpX/documentation/HttpX/Authentication":{"role":"article","title":"Authentication","abstract":[{"type":"text","text":"HttpX provides a flexible way to authenticate requests. You can use the "},{"type":"codeVoice","code":"AuthType"},{"type":"text","text":" enum to specify the authentication method you want to use."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/Authentication","kind":"article","type":"topic","url":"\/documentation\/httpx\/authentication"},"doc://HttpX/documentation/HttpX/Content":{"role":"symbol","title":"Content","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Content"}],"abstract":[{"type":"text","text":"An enumeration representing different types of content that can be encoded and attached to a URLRequest."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/Content","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Content"}],"url":"\/documentation\/httpx\/content"},"doc://HttpX/documentation/HttpX/Timeout":{"role":"article","title":"Timeout","abstract":[{"type":"text","text":"HttpX supports setting a timeout for requests. This can be done by pass the "},{"type":"codeVoice","code":"timeout"},{"type":"text","text":" argument to the request method."}],"identifier":"doc:\/\/HttpX\/documentation\/HttpX\/Timeout","kind":"article","type":"topic","url":"\/documentation\/httpx\/timeout"}}}